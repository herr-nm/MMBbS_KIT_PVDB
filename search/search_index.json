{"config":{"lang":["de"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"index.html","title":"KIT Pr\u00fcfungsvorbereitung Datenbanken","text":"<p>Willkommen im PV-DB-Kurs der kaufm\u00e4nnischen IT-Berufe an den MMBbS.</p> <p></p> <p>Lizenz</p> <p>Der PV-DB-Kurs von  Oliver Schwenke &amp; Andr\u00e9 Neumann ist lizenziert unter einer Creative Commons Namensnennung - Nicht-kommerziell - Weitergabe unter gleichen Bedingungen 4.0 International Lizenz. Fragen, Hinweise etc. an neumann@mmbbs.de.</p>"},{"location":"kapitel_01.html","title":"Kapitel 1: Vorstellung des Modellunternehmens","text":"<p>In diesem Kapitel ...</p> <p>... erfahren Sie mehr zu dem Modellunternehmen.</p>"},{"location":"kapitel_01.html#handlungssituation","title":"Handlungssituation","text":"<p>Die Bertram System Electronics GmbH &amp; Co. KG (kurz: BSE GmbH &amp; Co. KG) ist ein international agierendes IT-Systemhaus mit Sitz in Hannover. Die BSE GmbH &amp; Co. KG besch\u00e4ftigt 30 Mitarbeiterinnen und Mitarbeiter in verschiedenen Abteilungen.</p> <p>Die BSE bedient verschiedene Gesch\u00e4ftsfelder: Einerseits werden IT-Systeme jeder Gr\u00f6\u00dfe und Komplexit\u00e4t angeboten, bei Bedarf eingerichtet und im Rahmen von Support-Vertr\u00e4gen betreut.</p> <p>Andererseits bietet die BSE einen anfangs noch kleinen und mit der Zeit zunehmend gr\u00f6\u00dfer werdenden H\u00e4ndler-Service an. Im Rahmen dessen wird eine Verkaufsm\u00f6glichkeit f\u00fcr neue und gebrauchte Hardware angeboten. In dieser nimmt die BSE eine Vermittlerrolle zwischen Verk\u00e4ufer und K\u00e4ufer im Sinne eines Treuhandservice ein.</p> <p></p> <p>Lizenz</p> <p>Der PV-DB-Kurs von  Oliver Schwenke &amp; Andr\u00e9 Neumann ist lizenziert unter einer Creative Commons Namensnennung - Nicht-kommerziell - Weitergabe unter gleichen Bedingungen 4.0 International Lizenz. Fragen, Hinweise etc. an neumann@mmbbs.de.</p>"},{"location":"kapitel_02.html","title":"Kapitel 2: Grundlagen der Datenhaltung in Anwendungen","text":"<p>In diesem Kapitel ...</p> <ul> <li>... informieren Sie sich grob \u00fcber den Aufbau objektorientierter Anwendungen.</li> <li>... erarbeiten Sie sich die Grundlagen von Datenbanken.</li> <li>... erfahren Sie mehr zu Vorteilen von Datenbanken gg\u00fc. einer Tabellenkalkulation.</li> <li>... stellen Sie Grundprinzipien von Datenbanken zusammen.</li> </ul>"},{"location":"kapitel_02.html#kompetenz-20-grundlagen-der-objektorientierten-programmierung-oop-analysieren","title":"Kompetenz 2.0: Grundlagen der objektorientierten Programmierung (OOP) analysieren","text":"<p>Matthias Thale ist langj\u00e4hriger Mitarbeiter der BSE. Nachdem er im technischen Marketing jahrelang f\u00fcr die Auswahl von Hardwarekomponenten zust\u00e4ndig war, hatte er die Idee der urspr\u00fcnglichen Verkaufsplattform. Nachdem Herr Thale seit 5 Jahren alleine die in einer Tabellenkalkulation organisierte Plattform verwaltete, muss er sich nun ein Jahr vor seinem Ruhestand um einen Nachfolger k\u00fcmmern.</p> <p>Thilo Ostiem ist der designierte Leiter des Treuhandservices. Als er sich die Verwaltung der K\u00e4ufer, Verk\u00e4ufer und Artikel in der Tabellenkalkulation angesehen hatte, rauchte ihm sprichw\u00f6rtlich der Kopf. So w\u00fcrde er nicht arbeiten k\u00f6nnen, das bedeutet einen unverh\u00e4ltnism\u00e4\u00dfigen Arbeitsaufwand f\u00fcr die Einarbeitung, aber auch f\u00fcr die gesamte Betreuung. Das Jahr f\u00fcr die \u00dcbergabe m\u00f6chte Herr Ostiem sinnvoll nutzen und gemeinsam mit Herrn Thale ein modernes System einrichten. Dazu muss Herr Ostiem den Kollegen Thale erstmal von seiner Idee \u00dcberzeugen: das Programmieren einer Anwendung.</p> <p>Matthias Thale ist bereit, sein System in ein modernisiertes Programm zu \u00fcberf\u00fchren und mit seiner Erfahrung beizutragen. Dazu muss er aber wissen, wie das mit der Anwendung sowie deren Datenhaltung eigentlich funktioniert.</p> <p></p>"},{"location":"kapitel_02.html#arbeitsauftrag-a20-was-ist-die-objektorientierte-programmierung","title":"Arbeitsauftrag A|2.0: Was ist die Objektorientierte Programmierung?","text":"<p>L\u00f6sen Sie die folgenden Aufgaben \u00fcber das Informationsmaterial im Kurs:</p> <ol> <li>Was ist in der Anwendungsentwicklung ein Objekt?</li> <li>Was ist in der Anwendungsentwicklung eine Klasse?</li> </ol>"},{"location":"kapitel_02.html#informationsmaterial-m20-uberblick-der-anwendungsentwicklung","title":"Informationsmaterial M|2.0: \u00dcberblick der Anwendungsentwicklung","text":""},{"location":"kapitel_02.html#objektorientierung","title":"Objektorientierung","text":"<p>Seit Mitte der 1980er-Jahre hat die Objektorientierung und damit auch die objektorientierte Modellierung immer mehr an Bedeutung gewonnen. Ein Objekt bezeichnet die Abbildung eines Gegenstandes der realen Welt, der innerhalb der Software verwendet wird. Dabei kann es sich sowohl um programmtechnische Gegenst\u00e4nde, z. B. ein Fenster einer grafischen Benutzeroberfl\u00e4che, als auch um Gegenst\u00e4nde des zu unterst\u00fctzenden Problembereichs, z. B. ein Konto des Rechnungswesens, handeln.</p> <p>W\u00e4hrend die funktionsorientierte Softwareentwicklung prim\u00e4r auf die Algorithmen ausgerichtet ist und sich die datenorientierte Entwicklung auf die Datenelemente und ihre Beziehungen untereinander konzentriert, umfasst die Objektorientierung beide Aspekte: In einem Objekt werden die charakterisierenden Daten (Attribute) sowie die m\u00f6glichen Funktionen (Methoden) eines Gegenstandes zusammengefasst. Die Inhalte der Attribute beschreiben den aktuellen Zustand des Objekts, die Methoden hingegen sein dynamisches Verhalten. Wird z. B. ein Konto als Objekt abgebildet, dann sind sowohl seine Attribute (Kontonummer, Saldo \u2026) als auch die m\u00f6glichen Funktionen (Buchen, Saldo ermitteln\u2026) zu definieren, mit denen die Werte der Attribute manipuliert werden. Durch die gleichzeitige Betrachtung von Daten und Funktionen entfallen Zuordnungs- und Koordinationsaufgaben des Entwicklers bez\u00fcglich der Daten und den von ihnen getrennten und sie manipulierenden Funktionen.</p>"},{"location":"kapitel_02.html#klassifikation-spezialisierung-generalisierung","title":"Klassifikation, Spezialisierung &amp; Generalisierung","text":"<p>Gleichartige Objekte, die durch die gleichen Attribute und Methoden gekennzeichnet sind, werden einer gemeinsamen Klasse zugeordnet (Klassifikation). Die Konten des betrieblichen Kontenrahmens geh\u00f6ren alle zur Klasse Konto, denn sie werden durch die gleiche Datenstruktur und die gleichen Methoden definiert. Die einzelnen Konten, die sich nur hinsichtlich des Inhaltes ihrer Datenfelder unterscheiden, werden als Instanzen der Klasse Konto bezeichnet.</p> <p>\u00dcber die Klassifikation hinaus kann die abzubildende Realit\u00e4t durch Spezialisierung und Generalisierung strukturiert werden:</p> <ul> <li>Die Spezialisierung bedeutet eine inhaltliche Verfeinerung einer Klasse zu mehreren davon abgeleiteten Unterklassen. Aus der Klasse Konto gehen durch Spezialisierung die Klassen Sachkonto und Finanzkonto hervor.</li> <li>Bei der Generalisierung wird in umgekehrter Richtung durch Abstraktion f\u00fcr mehrere Klassen eine \u00fcbergeordnete Klasse gesucht.</li> </ul> <p>In beiden F\u00e4llen entsteht eine Klassenhierarchie, in der \u00fcbergeordnete Klassen ihre Eigenschaften, n\u00e4mlich die Attribute und Methoden, an ihre untergeordneten Klassen weitergeben. Diese Weitergabe der Eigenschaften hei\u00dft Vererbung. Soll eine Software Sach- und Finanzkonten verwenden, werden diejenigen Attribute und Methoden, die f\u00fcr beide Klassen \u2013 Sachkonto und Finanzkonto \u2013 ben\u00f6tigt werden, in der \u00fcbergeordneten Klasse Konto definiert. Objektinstanzen beider Klassen k\u00f6nnen bei der Ausf\u00fchrung der Software auf diese Definitionen zur\u00fcckgreifen.</p> <p>Nur die Funktionen und Datenfelder der spezialisierten Klasse definiert der Entwickler in den untergeordneten Klassen. Bei der Softwareentwicklung werden allgemein g\u00fcltige Attribute und Methoden, die von Objektinstanzen aller Klassen verwendet werden, zu in der Hierarchie m\u00f6glichst hoch angesiedelten Klassen zugeordnet. Dadurch greifen die Objektinstanzen beliebig vieler untergeordneter Klassen auf die Klassendefinition einer \u00fcbergeordneten Klasse zur\u00fcck, was den Implementierungsaufwand im Vergleich zur herk\u00f6mmlichen Programmierung deutlich reduzieren kann.</p> <p>Quelle: Schwarzer, B. &amp; Krcmar, H. (2014). Wirtschaftsinformatik. Grundlagen betrieblicher Informationssysteme (5. Aufl.) Stuttgart: Sch\u00e4ffer-Poeschel.</p>"},{"location":"kapitel_02.html#arbeitsauftrag-a21-funktionalitat-und-datenhaltung-in-klassen-und-objekten","title":"Arbeitsauftrag A|2.1: Funktionalit\u00e4t und Datenhaltung in Klassen und Objekten","text":"<p>L\u00f6sen Sie die folgenden Aufgaben \u00fcber das Informationsmaterial im Kurs:</p> <ol> <li>Wie sieht die graphische Darstellung einer einzelnen Klasse gem\u00e4\u00df eines UML-Klassendiagramms aus? Beschreiben Sie diese in eigenen Worten.</li> <li>Verdeutlichen Sie, wo Methoden (also die Funktionalit\u00e4t) einer Klasse definiert werden.</li> <li>Verdeutlichen Sie auch, wo die Daten (im Sinne der Programmvariablen) einer Klasse definiert werden.</li> </ol>"},{"location":"kapitel_02.html#informationsmaterial-m21-uml-klassendiagramm","title":"Informationsmaterial M|2.1: UML-Klassendiagramm","text":"<p>F\u00fcr die Analyse und das Design von Softwaresystemen ist das Klassendiagramm das wichtigste Diagramm. Hier werden Klassen und deren Beziehungen untereinander statisch dargestellt. Eine Klasse besteht aus drei wesentlichen Teilen: dem Klassennamen, den Methoden und den Attributen:</p> <p></p> <p>Attribute haben unterschiedliche Sichtbarkeiten. Sie k\u00f6nnen privat oder \u00f6ffentlich sein. Dazu bietet das Klassendiagramm folgende Symbolik:</p> Symbol Bedeutung Sichtbarkeit <code>-</code> privates Attribute (private) Ist gegen den Zugriff von au\u00dfen gesch\u00fctzt und kann nur \u00fcber entsprechende Methoden angesprochen werden. <code>+</code> \u00f6ffentliches Attribut (public) Kann direkt angesprochen werden und wird nur selten verwendet. <code>#</code> gesch\u00fctztes Attribut \u2013 spielt bei der Vererbung eine Rolle (protected) Verh\u00e4lt sich nach au\u00dfen wie ein privates Attribut. Innerhalb der Vererbungshierarchie aber wie ein \u00f6ffentliches. Eine Klasse, die von einer anderen erbt, kann auf deren gesch\u00fctzte Attribute zugreifen als w\u00e4re es ihre eigenen."},{"location":"kapitel_02.html#kompetenz-21-grundlagen-und-vorteile-der-datenbanken-erkennen","title":"Kompetenz 2.1: Grundlagen und Vorteile der Datenbanken erkennen","text":"<p>Die Planung der zu programmierenden Anwendung wird \u00fcber Objekte und damit abstrakter in Klassen in Form eines UML-Diagramms geplant. Die Funktionalit\u00e4t und die Datenhaltung werden in einer Klasse zwar vereint, aber der Fokus soll f\u00fcrs Erste gem\u00e4\u00df der Vereinbarung zwischen Matthias Thale und Thilo Ostiem auf die Daten gelegt werden.</p> <p>Eine gute Datenhaltung als Basis f\u00fcr eine Anwendung in der Tabellenkalkulation weiterzuf\u00fchren scheint wenig sinnvoll. Herr Ostiem hat bereits mehrfach Fehler festgestellt, die sich eingeschlichen haben. Eine Datenbank soll in der neuen Anwendung zur Verwaltung der Daten aufgebaut werden. Dies hat Herr Ostiem noch nie gemacht. Was ist eigentlich eine Datenbank?</p> <p></p>"},{"location":"kapitel_02.html#arbeitsauftrag-a22-was-ist-eine-datenbank","title":"Arbeitsauftrag A|2.2: Was ist eine Datenbank?","text":"<p>Beschreiben Sie in eigenen Worten die Funktion einer Datenbank. Nennen Sie dabei auch die Vorteile, die sich durch die Nutzung von elektronischen Datenbanken ergeben.</p>"},{"location":"kapitel_02.html#informationsmaterial-m22-aufbau-einer-relationalen-datenbank","title":"Informationsmaterial M|2.2: Aufbau einer relationalen Datenbank","text":"<p>Einsatzgebiete von Datenbanken Eine Datenbank, auch bezeichnet als Datenbanksystem, ist ein System zur elektronischen Speicherung und Verwaltung von Daten. Die Hauptaufgabe einer Datenbank ist es, gro\u00dfe Mengen an Informationen (Daten) m\u00f6glichst effizient und dauerhaft bzw. sicher zu speichern. Anwender k\u00f6nnen sich gespeicherte Informationen aus einer Datenbank anzeigen lassen.</p> <p>Ein Datenbanksystem besteht aus drei Komponenten:</p> <p></p> <p>Die Abbildung zeigt die sogenannte 3-Schichten-Technologie: Die Struktur von ERP-Systemen basiert ebenfalls auf der Grundstruktur der 3-Schichten-Technologie.</p> <p>Zum einen wird eine Verwaltungssoftware (Datenbankmanagementsystem) ben\u00f6tigt. Diese greift zum anderen auf die zu verwaltenden Daten an sich, also die Datenbank im engeren Sinn, zu. Die Funktion der Verwaltungssoftware besteht in der Organisation bzw. strukturierten Speicherung der Daten. Sie kontrolliert z.B. die Zugriffe (Daten lesen und schreiben) auf die Datenbank.</p> <p>Datenbanken werden in nahezu allen Bereichen der elektronischen Datenverarbeitung genutzt. In Unternehmen finden Datenbanken z.B. Anwendung bei der Erfassung und Auswertung von Kundendaten, Lieferanten, Artikel usw. Dabei greifen verschiedene Anwendungen \u00fcber das Datenbankmanagementsystem auf die Datenbank zu. Die erfassten Daten werden in Tabellenform gespeichert.</p> <p>Auch hinter vielen Websites stehen umfangreiche Datenbanken. Bei Nutzung von Social-Networks werden z.B. pers\u00f6nliche Angaben, Beitr\u00e4ge und Fotos in gro\u00dfen Datenbanken gespeichert und Personen bzw. Personengruppen zugeordnet.</p>"},{"location":"kapitel_02.html#vorteile-von-datenbanken-sind-unter-anderem","title":"Vorteile von Datenbanken sind unter anderem:","text":"<ul> <li>Effizienz: Daten werden nur einmalig erfasst. Die gespeicherten Informationen sind f\u00fcr alle Anwendungen und Einsatzgebiete im Unternehmen verf\u00fcgbar, auch \u00fcber Unternehmensgrenzen hinweg. Das spart Zeit und Personalkosten in Hinblick auf die Datenpflege. Datenkorrekturen m\u00fcssen nur einmal erfasst werden und stehen sofort f\u00fcr alle zur Verf\u00fcgung. Es treten weniger Fehlerquellen durch mehrfache Datenpflege auf. Alle Daten k\u00f6nnen bei Bedarf von einer gro\u00dfen Mitarbeiterzahl genutzt werden. Dabei regeln Steuerungen im Datenbankmanagementsystem, dass ein Datensatz nicht von mehreren Personen gleichzeitig bearbeitet werden kann. W\u00e4hrend ein Mitarbeiter einen Datensatz bearbeitet, ist dieser f\u00fcr alle anderen zur Bearbeitung gesperrt.</li> <li>Verwaltung von gro\u00dfen Datenmengen: Daten k\u00f6nnen \u00fcber einen unbegrenzten Zeitraum in einer unbegrenzten Menge gehalten (gespeichert) und wieder zur Verf\u00fcgung gestellt werden. Gerade gro\u00dfe Unternehmen speichern riesige Mengen an Daten. Sehr gro\u00dfe Datenmengen k\u00f6nnen in Auswertungen mit einbezogen werden z.B. f\u00fcr Analysen und daraus folgende Prognosen.</li> </ul>"},{"location":"kapitel_02.html#verbreitete-datenbankprogramme","title":"Verbreitete Datenbankprogramme","text":"<p>Es gibt eine Vielzahl von verschiedenen Datenbanken. \"Global Player\" sind hierbei die Datenbanken der Firmen Oracle und IBM. Als kostenlose Open-Source-Alternative ist die Datenbank MySQL zu nennen, welche wir im weiteren Verlauf dieses Kurses nutzen werden. Von der Firma Microsoft wird das Programm Access angeboten. Dieses erm\u00f6glicht einerseits graphische Darstellungen und Verwaltung von Datenbanken, als auch eine SQL-Eingabe.</p>"},{"location":"kapitel_02.html#arbeitsauftrag-a23-einsatzgebiete-fur-datenbanken","title":"Arbeitsauftrag A|2.3: Einsatzgebiete f\u00fcr Datenbanken","text":"<p>Z\u00e4hlen Sie auf, in welchen Abteilungen eines Unternehmens Datenbanken sinnvolle Unterst\u00fctzung bieten oder wo Sie im Alltag Datenbanken begegnen. Nennen Sie jeweils ein Beispiel und begr\u00fcnden Sie Ihre Wahl.</p>"},{"location":"kapitel_02.html#arbeitsauftrag-a24-grundlagen-zu-datenbanken","title":"Arbeitsauftrag A|2.4: Grundlagen zu Datenbanken","text":"<p>Beantworten Sie die folgenden Fragen:</p> <ol> <li>Beschreiben Sie den Begriff \"relationale Datenbank\".</li> <li>Erkl\u00e4ren Sie, warum es sinnvoll ist, Tabellen miteinander zu verkn\u00fcpfen.</li> <li>Nennen Sie Vorteile einer Datenbank gegen\u00fcber einem Karteikartensystem.</li> <li>Z\u00e4hlen Sie auf, welche Grunds\u00e4tze Unternehmen bei der Verarbeitung von personenbezogenen Daten in Bezug auf den Datenschutz ber\u00fccksichtigen m\u00fcssen.</li> </ol> <p>// TODO Informationsmaterial M|2.3: Relationale Datenbanken - \u00dcbersicht</p>"},{"location":"kapitel_02.html#informationsmaterial-m24-grundregeln-von-datenbanken","title":"Informationsmaterial M|2.4: Grundregeln von Datenbanken","text":""},{"location":"kapitel_02.html#keine-redundanzen","title":"Keine Redundanzen","text":"<p>Ein Vorteil und eine weitere Voraussetzung f\u00fcr eine relationale Datenbank ist, dass keine Datenredundanzen auftreten d\u00fcrfen: Es werden keine Daten mehrfach gespeichert. In dem obigen Beispiel werden daher in der Tabelle Artikelbezug keine Adressen der Lieferer gespeichert, sondern lediglich per Lieferer-Nr. auf die Stammdatenliste verwiesen.</p>"},{"location":"kapitel_02.html#eindeutigkeit-von-datensatzen-durch-schlusselattribute","title":"Eindeutigkeit von Datens\u00e4tzen durch Schl\u00fcsselattribute","text":"<p>Damit es nicht zu Fehlern oder Verwechslungen in der Tabelle kommt, erh\u00e4lt jeder Datensatz einen Prim\u00e4rschl\u00fcssel. Durch die Vergabe eines Prim\u00e4rschl\u00fcssels ist jeder Datensatz eindeutig identifizierbar. Ein Schl\u00fcssel darf sich nie \u00e4ndern. In der vorigen Tabelle dient die Lieferer-Nr. als Prim\u00e4rschl\u00fcssel der Datens\u00e4tze f\u00fcr die Tabelle Hauptlieferer.</p> <p>Falls die Prim\u00e4rschl\u00fcssel der Lieferanten nachtr\u00e4glich ver\u00e4ndert werden, k\u00f6nnten die Datens\u00e4tze aus der Tabelle \"Hauptlieferer\" nicht mehr den Datens\u00e4tzen der Tabelle \"Artikelbezug\" zugeordnet werden. Die Folge w\u00e4re eine \"Inkonsistenz\" in der Datenbank.</p>"},{"location":"kapitel_02.html#keine-prozessdaten","title":"Keine Prozessdaten","text":"<p>Eine Tabelle darf nur Grunddaten enthalten (Entit\u00e4ten). Daten, die sich aus Grunddaten zusammensetzen oder errechnen lassen, m\u00fcssen vermieden werden, damit es nicht zu Widerspr\u00fcchen kommen kann.</p> <p>Beispiel: Das Alter einer Person darf nicht in einer Datenbank aufgenommen werden, da dieses sich st\u00e4ndig \u00e4ndert. Stattdessen wird das Geburtsdatum erfasst, da mit diesem stets das aktuelle Alter errechnet werden kann.</p>"},{"location":"kapitel_02.html#kompetenz-22-datenbank-lebenszyklus-berucksichtigen","title":"Kompetenz 2.2: Datenbank-Lebenszyklus ber\u00fccksichtigen","text":"<p>Die Datenhaltung in dem herk\u00f6mmlichen Dateisystem mithilfe von Tabellenkalkulationen haben gegen\u00fcber einer Datenbank verschiedene Nachteile und bringen oftmals Probleme mit sich. Da Matthias Thale sich nun mit der Sicherung der Daten besch\u00e4ftigt hat, fallen Ihm einige Probleme auf, die mit der bisherigen Datenhaltung aufkommen.</p> <p>Bei der Analyse der Situation und der Auseinandersetzung mit dem Speichern von Daten k\u00f6nnen verschiedene Probleme identifiziert werden. Mit diesen sollen Sie sich nun auseinandersetzen. Au\u00dferdem ist Matthias Thale der genaue Ablauf zur Erstellung und Wartung einer Datenbank unbekannt, weshalb eine Darstellung erarbeitet werden soll.</p> <p></p>"},{"location":"kapitel_02.html#arbeitsauftrag-a25-datenbank-lebenszyklus","title":"Arbeitsauftrag A|2.5: Datenbank-Lebenszyklus","text":"<p>Erstellen Sie ein Schaubild zum Datenbank-Lebenszyklus, damit dieses f\u00fcr Matthias Thale einen groben Ablaufplan abbildet. Nutzen Sie hierf\u00fcr das Informationsmaterial im Kurs.</p>"},{"location":"kapitel_02.html#informationsmaterial-m25-datenbank-lebenszyklus","title":"Informationsmaterial M|2.5: Datenbank-Lebenszyklus","text":"<p>Bei der Entwicklung und dem Einsatz von Software werden die verschiedenen Phasen wie z.B. Analyse, Planung, Entwicklung, Test und Anwendung von Software unterschieden und unter dem Begriff des Software-Lebenszyklus zusammengefasst. Diese Einteilung in Entwicklungsphasen kann ebenfalls auf dem Gebiet der Datenbanken angewendet werden.</p> <p>Die Analyse der Anforderungen grenzt die Inhalte der neuen Datenbank ein und dient der Festlegung der Benutzergruppen und Anwendungen. Dabei werden die Datenobjekte, deren Eigenschaften und Beziehungen sowie m\u00f6gliche Vorg\u00e4nge (Aktualisierungen, Abfragen) und Randbedingungen ermittelt. Das Resultat der Anforderungsanalyse ist die Anforderungsspezifikation.</p> <p>Der konzeptionelle Entwurf umfasst die Modellierung der Sichten und die Integration der Sichten in ein Gesamtschema. Daf\u00fcr werden meist Entity-Relationship-Diagramme erstellt. Auf diesem Gebiet werden aber auch UML-Diagramme eingesetzt (UML = Unified Modeling Language).</p> <p>Diese grafischen Darstellungen werden in der Phase des logischen Entwurfs in das Datenmodell des Ziel DBS (z,B. in das relationale Datenmodell) transformiert und die gesamte Datenbank wird so aufbereitet, dass eine effektive Speicherung m\u00f6glich ist (das Datenbankschema wird normalisiert).</p> <p>Bei verteilten Datenbanken ist ein Entwurf f\u00fcr die Verteilung der Datenbanken im Netz erforderlich.</p> <p>Nun kann die Datenbank mithilfe der Sprachmittel des DBMS erstellt und die ben\u00f6tigten Anfragen k\u00f6nnen formuliert werden, was als physischer Entwurf bzw. Implementierung bezeichnet wird. F\u00fcr relationale DBS geschieht dies in der Abfragesprache SQL. Im Falle einer \u00dcbernahme von Daten aus alten Datenbanken oder Dateiinhalten erfolgt an dieser Stelle eine Konvertierung dieser Daten in das neue Format.</p> <p>Die Datenbank und die erstellten Abfragen werden nun getestet und die Ergebnisse werden auf ihre G\u00fcltigkeit bez\u00fcglich der Anforderungen gepr\u00fcft (validiert). So wir die Sicherung der Datenbank-Qualit\u00e4t gew\u00e4hrleistet.</p> <p>In der Phase der Anwendung muss die Datenbank st\u00e4ndig gewartet werden. Im Laufe dieser Zeit k\u00f6nnen sich \u00c4nderungen des Datenbankschemas ergeben. In diesem Fall ist eine Reorganisation der Datenbank notwendig.</p> <p>Zus\u00e4tzliches Material, weitere \u00dcbungen &amp; Tipps</p> <p>Die folgenden \u00dcbungen und Tipps &amp; Tricks dienen Ihrer pers\u00f6nlichen Wiederholung und Vorbereitung auf Klassenarbeiten, Pr\u00fcfungen etc.Ich kann, weil ich will, was ich muss! (Immanuel Kant)</p>"},{"location":"kapitel_02.html#ubungen","title":"\u00dcbungen","text":"<p>// TODO Links einf\u00fcgen</p>"},{"location":"kapitel_02.html#zusatzmaterial","title":"Zusatzmaterial","text":"<p>// TODO Links einf\u00fcgen</p> <p>Lizenz</p> <p>Der PV-DB-Kurs von  Oliver Schwenke &amp; Andr\u00e9 Neumann ist lizenziert unter einer Creative Commons Namensnennung - Nicht-kommerziell - Weitergabe unter gleichen Bedingungen 4.0 International Lizenz. Fragen, Hinweise etc. an neumann@mmbbs.de.</p>"},{"location":"kapitel_03.html","title":"Kapitel 3: Entwurf von Datenbanken &amp; Normalisierung","text":"<p>In diesem Kapitel ...</p> <ul> <li>... analysieren Sie als Datenbank zu realisierende Zust\u00e4nde von Systemen.</li> <li>... erfahren Sie mehr zur Modellierungstechnik ERM.</li> <li>... beurteilen Sie vorliegende Tabellen.</li> <li>... identifizieren Sie Probleme mit der Datenhaltung bestimmter Tabellen.</li> <li>... f\u00fchren Sie die Schritte der Normalisierung durch.</li> </ul>"},{"location":"kapitel_03.html#kompetenz-30-er-diagramme-beschreiben","title":"Kompetenz 3.0: ER-Diagramme beschreiben","text":"<p>Nachdem Matthias Thale nun mehr \u00fcber Datenbanken wei\u00df, m\u00f6chte er diese erst einmal konzeptionell entwerfen, bevor er mit der Realisierung beginnt. Thilo Ostiem hat ihm daf\u00fcr Material zusammen gesucht, anhand dessen die Modellierungstechnik erl\u00e4utert werden soll. Die Methode der Modellierung, die sich durchgesetzt hat, ist das sogenannte Entity-Relationship-Modell (ERM). Damit Thilo Ostiem beginnen kann, m\u00fcssen die einzelnen Elemente der Notation genauer betrachtet werden.</p> <p></p>"},{"location":"kapitel_03.html#arbeitsauftrag-a30-beschreiben-eines-er-diagrammes","title":"Arbeitsauftrag A|3.0: Beschreiben eines ER-Diagrammes","text":"<p>Ein Restaurant m\u00f6chte eine bestehende Datenbank erweitern. Bisher sind einige Sachverhalte f\u00fcr die Vorratshaltung abgebildet:</p> <ul> <li>Ein Rezept hat mehrere Zutaten.</li> <li>Eine Zutat kann in mehreren Rezepten verwendet werden.</li> <li>Eine Zutat stammt immer genau aus einem Lagerort.</li> <li>Lagerorte werden f\u00fcr mehrere Zutaten genutzt.</li> </ul> <p>So kann in dem Restaurant bisher folgendes dargestellt werden:</p> <ul> <li>F\u00fcr den hauseigenen Vollkorn-Pizzateig werden Weizenmehl, Vollkornmehl, frische Hefe, Salz, Zucker, Oliven\u00f6l und Wasser ben\u00f6tigt.</li> <li>Vollkornmehl, Weizenmehl, Salz und Zucker werden im Trockenlager bevorratet.</li> <li>Frische Hefe muss in den K\u00fchlschrank.</li> <li>Oliven\u00f6l ist im Flaschenlager zu finden.</li> <li>Eine Zutat hat eine Ma\u00dfeinheit, bspw. wird Weizenmehl in Gramm (g) angegeben.</li> <li>Rezepte haben einen Namen, der auf der Karte ausgewiesen wird.</li> <li>...</li> </ul> <p>Beschreiben Sie mit eigenen Worten den Aufbau eines ER-Diagramms immer in Bezug auf das Beispiel:</p> <p></p> <ol> <li>Was sind Entit\u00e4ten?</li> <li>Was sind Attribute?</li> <li>Was sind Beziehungen?</li> <li>Was sind Kardinalit\u00e4ten?</li> <li>Was bedeuten die im Beispiel eingesetzten Kardinalit\u00e4ten in dem Fall?</li> <li>Welche Aufgabe hat der Prim\u00e4rschl\u00fcssel?</li> <li>Welche Aufgabe hat der Fremdschl\u00fcssel?</li> <li>Was ist referenzielle Integrit\u00e4t?</li> </ol>"},{"location":"kapitel_03.html#arbeitsauftrag-a31-beziehungstypen","title":"Arbeitsauftrag A|3.1: Beziehungstypen","text":"<p>Greifen wir noch einmal das folgende Beispiel auf:</p> <p></p> <p>Erl\u00e4utern Sie, was genau die n:m-Beziehung darstellt. Warum wird bei der n:m-Beziehung die Beziehungsentit\u00e4t ben\u00f6tigt? Auf welcher Seite steht in einer 1:n-Beziehung der Fremdschl\u00fcssel?</p>"},{"location":"kapitel_03.html#informationsmaterial-m30-grundlagen-des-entity-relationship-modells-erm","title":"Informationsmaterial M|3.0: Grundlagen des Entity-Relationship-Modells (ERM)","text":""},{"location":"kapitel_03.html#grundlagen-software","title":"Grundlagen &amp; Software","text":"<p>Das Entity-Relationship-Modell, kurz ERM, ist ein einfaches Modell f\u00fcr den Entwurf von Datenbanken. Die deutsche \u00dcbersetzung des Begriffes lautet in etwa: Gegenstand-Beziehung-Modell. Das ERM besteht aus einer Abbildung, dem ER-Diagramm (kurz auch ERD genannt). Die darin verwendeten Elemente enthalten eine Beschreibung.</p> <p></p> <p>Ein erster Entwurf kann entweder handschriftlich oder mit einem Computerprogramm erfolgen. Einige Softwarevorschl\u00e4ge sind bspw.:</p> <ul> <li>yEd - Graph Editor - yWorks (f\u00fcr Einsteiger &amp; Fortgeschrittene; erf\u00fcllt die im Unterricht verwendete Notation voll)</li> <li>MySQL Workbench (tendenziell eher f\u00fcr Fortgeschrittene; erf\u00fcllt die im Unterricht verwendete Notation teilweise)</li> </ul> <p>Hinweis</p> <p>Sie m\u00fcssen hinsichtlich der IHK-Pr\u00fcfungen und Klausuren unbedingt in der Lage sein, ER-Diagramme auch auf Papier zu zeichnen. Das mag zwar etwas komisch klingen, aber der Schwierigkeitsgrad ist aufgrund mangelnder Verschiebem\u00f6glichkeiten bedeutend h\u00f6her und sollte zwingend ebenfalls ge\u00fcbt werden.</p> <p>Bei dem Aufbau eines ER-Modells bzw. des daraus resultierenden ER-Diagrammes sind unterschiedliche Darstellungsformen in Gebrauch. Die bekannteste Form stellt die sogenannte Chen-Notation von Peter Chen dar. Chen gilt als Entwickler der ER-Diagramme. Die grundlegenden Elemente werden im Folgenden erkl\u00e4rt.</p>"},{"location":"kapitel_03.html#entitat-entity","title":"Entit\u00e4t (Entity)","text":"<p>Als Entit\u00e4t wird ein eindeutig bestimmbares Objekt bezeichnet. \u00dcber dieses Objekt sollen Informationen (z.B. Attribute) gespeichert oder verarbeitet werden.</p> <p>Eine Entit\u00e4t wird im ER-Diagramm als Rechteck dargestellt und grunds\u00e4tzlich im Singular beschrieben.</p> <p></p> <p>Beispiele: Artikel, Lieferer, Kunde, Person, Autor, Dokument usw.</p>"},{"location":"kapitel_03.html#attribut","title":"Attribut","text":"<p>Ein Attribut ist ein Merkmal bzw. Kennzeichen eines Objektes, also einer Entit\u00e4t. Jede Entit\u00e4t kann beliebig viele Attribute besitzen. Das Wort Attribut l\u00e4sst sich auch als Eigenschaft bezeichnen.</p> <p>Ein Attribut wird im ER-Diagramm als Ellipse dargestellt. Die Attribute werden mit ungerichteten Kanten zu den Entit\u00e4ten verbunden.</p> <p></p> <p>Beispiele: Artikelnummer, Name, Ort, Datum, Menge usw.</p> <p>W\u00e4hrend z.B. das Attribut \"Ort\" eine Eigenschaft einer Entit\u00e4t darstellt, sind \"Hannover\" oder \"Oldenburg\" konkrete Attributwerte. In ER-Diagrammen werden stets nur Attribute und nicht Attributwerte benutzt.</p>"},{"location":"kapitel_03.html#beziehung-relationship","title":"Beziehung (Relationship)","text":"<p>Als Relationship oder Relation bezeichnet man die Beziehung zwischen zwei Objekten (Entit\u00e4ten). Durch die Nutzung von Relationships sollen im Datenbankentwurf Sachverhalte zwischen zwei Objekten dargestellt werden.</p> <p>Eine Beziehung wird im ER-Diagramm als Raute dargestellt. Diese verbindet mit Linien zwei Entit\u00e4ten.</p> <p></p> <p>In den vorherigen Beispiel werden die Entit\u00e4ten \"Autor\" und \"Pressetext\" durch die Entit\u00e4t \"schreibt\" in Beziehung gesetzt: \"Autor schreibt einen Pressetext\" oder anders herum \"Ein Pressetext hat einen Autor\". Hieraus wird auch der kleinste Standard deutlich, denn das Wort \"hat\" passt i.d.R. in die Beziehung. Es sollte aber ein m\u00f6glichst treffendes Verb benutzt werden.</p> <p>Weitere Beispiele sind: Lieferer liefert Artikel, Kunde bestellt Artikel, Sch\u00fcler besucht Klasse.</p> <p>Einfache Diagramme k\u00f6nnen bereits nur mit Entit\u00e4ten, Attributen und Relationships entworfen werden. F\u00fcr eine genauere Planung fehlen aber noch ein paar Elemente.</p>"},{"location":"kapitel_03.html#primarschlussel-primary-key","title":"Prim\u00e4rschl\u00fcssel (Primary Key)","text":"<p>Ein Prim\u00e4rschl\u00fcssel wird verwendet, um einen Datensatz eindeutig zu identifizieren. Ein Schl\u00fcsselfeld bedient sich dabei eines Attributs.</p> <p>Ein Schl\u00fcsselfeld wird durch ein Attribut (Ellipse) dargestellt. Der Text ist dabei im Gegensatz zu weiteren Attributen unterstrichen.</p> <p></p> <p>Beispiele: Autoren Nr., Pressetext Nr, Kundennummer, Personalnummer</p>"},{"location":"kapitel_03.html#kardinalitaten-cardinalities","title":"Kardinalit\u00e4ten (Cardinalities)","text":"<p>Kardinalit\u00e4ten stellen Mengenangaben dar. Durch Kardinalit\u00e4ten wird beschrieben, in welchem \"Mengenverh\u00e4ltnis\" zwei Entit\u00e4ten in Beziehung zueinander stehen k\u00f6nnen. Dazu werden mathematische Mengenangaben genutzt (z.B. 1 oder n = beliebig viele).</p> <p></p> <p>Beispiel (1:n): Ein Autor (1) schreibt (n) beliebig viele Pressetexte.</p> <p>Beispiel (1:1): Ein Ehemann (1) hat (1) genau eine Ehefrau und umgekehrt.</p>"},{"location":"kapitel_03.html#informationsmaterial-m31-schlusselattribute","title":"Informationsmaterial M|3.1: Schl\u00fcsselattribute","text":""},{"location":"kapitel_03.html#primarschlussel","title":"Prim\u00e4rschl\u00fcssel","text":"<p>Wie bereits im vorherigen Informationsmaterial beschrieben ist, nehmen Prim\u00e4rschl\u00fcssel(-felder) in Datenbanken eine sehr wichtige Funktion ein. Alle Tabellen ben\u00f6tigen einen sogenannten Prim\u00e4rschl\u00fcssel.</p> <p>Jeder einzelne Datensatz wird dabei durch einen Prim\u00e4rschl\u00fcssel beschrieben. Durch die Vergabe von Prim\u00e4rschl\u00fcsseln k\u00f6nnen z.B. Verwechslungen ausgeschlossen werden. Zum Beispiel existieren in Deutschland mehrere Personen mit dem gleichen Namen und Geburtsdatum (z.B. Tim Jansen, geboren am 19.12.1980). Durch die Vergabe von Prim\u00e4rschl\u00fcsseln, z.B. einer Personal- oder Sozialversicherungsnummer, k\u00f6nnen die einzelnen Datens\u00e4tze ohne Verwechslung unterschieden werden. Ein Prim\u00e4rschl\u00fcssel kann dabei aus Ziffern, Buchstaben oder Kombinationen (alphanumerisch) gebildet werden. Entscheidend ist, dass ein Prim\u00e4rschl\u00fcssel einzigartig ist, z.B. durch Vergabe einer durchlaufenden Nummer, und er sich niemals \u00e4ndert. Ein Kunde eines Unternehmens erh\u00e4lt z.B. f\u00fcr die Dauer der Gesch\u00e4ftsbeziehungen eine einzigartige Kundennummer. Mithilfe von Prim\u00e4rschl\u00fcsseln k\u00f6nnen auch Beziehungen zwischen Tabellen in einer Datenbank hergestellt werden.</p> <p>Erst durch einen Prim\u00e4rschl\u00fcssel ist eine Beziehung (Relation) zwischen zwei Tabellen m\u00f6glich.</p> <p>Beispiel: Nachfolgend wird eine Pressetext-Nr. als Prim\u00e4rschl\u00fcssel verwendet. In diesem Fall setzt sich die Nummer aus Teilen des Datums und einer fortlaufenden Nummer zusammen:</p> <p></p> <p>Prim\u00e4rschl\u00fcssel k\u00f6nnen, wie in dem vorhergehenden Beispiel, entweder selbst generiert werden, oder man greift auf bereits \"bestehende\" Prim\u00e4rschl\u00fcssel zur\u00fcck. Eine Buchhandlung kann sich z.B. der ISBN-Nummer bedienen. Bei einem Supermarkt bietet sich die EAN (die Nummer, die der Barcode darstellt) f\u00fcr die gef\u00fchrten Artikel an.</p> <p>Die folgenden Schl\u00fcsselarten lassen sich bei einem Datenbankentwurf unterschieden.</p>"},{"location":"kapitel_03.html#naturlicher-primarschlussel","title":"Nat\u00fcrlicher Prim\u00e4rschl\u00fcssel","text":"<p>Als nat\u00fcrlichen Prim\u00e4rschl\u00fcssel k\u00f6nnen alle Schl\u00fcssel verstanden werden, die bereits durch ein Objekt (Entit\u00e4t) gegeben sind.</p> <p>Ein Buchgesch\u00e4ft kann z.B. die ISBN eines Werkes einfach in die eigene Datenbank \u00fcbernehmen oder ein Vermieter von E-Bikes \u00fcbernimmt die Seriennummer der Fahrzeuge.</p>"},{"location":"kapitel_03.html#kunstlicher-primarschlussel","title":"K\u00fcnstlicher Prim\u00e4rschl\u00fcssel","text":"<p>K\u00fcnstliche Prim\u00e4rschl\u00fcssel werden oft vergeben, wenn kein nat\u00fcrlicher Schl\u00fcssel vorliegt oder \u00fcbernommen werden soll. K\u00fcnstliche Prim\u00e4rschl\u00fcssel werden bei dem Anlegen der Datenbank festgelegt.</p> <p>Beispiele: Ein Unternehmen vergibt Kundennummern, um seine Kunden eindeutig voneinander zu unterscheiden.</p>"},{"location":"kapitel_03.html#zusammengesetzter-primarschlussel","title":"Zusammengesetzter Prim\u00e4rschl\u00fcssel","text":"<p>Ein zusammengesetzter Prim\u00e4rschl\u00fcssel ist ein Schl\u00fcssel, der durch die Kombination von verschiednenen Attributen erzeugt wird. In der Praxis kann ein zusammengesetzter Prim\u00e4rschl\u00fcssel zu Problemen f\u00fchren. Bei einer Rechnung k\u00f6nnte der Prim\u00e4rschl\u00fcssel z.B. aus dem Datum und der Kundennummer erzeugt werden. Falls ein Kunde zwei Rechnungen an einem tag ausgestellt bekommen w\u00fcrde, w\u00e4re ein Schl\u00fcssel doppelt vergeben. Ein \"reiner\" zusammengesetzter Prim\u00e4rschl\u00fcssel ist daher selten anzutreffen. Entweder wird dieser um einen k\u00fcnstlichen Prim\u00e4rschl\u00fcssel erg\u00e4nzt (z.B. eine fortlaufende Nummer) oder ersetzt.</p>"},{"location":"kapitel_03.html#fremdschlussel","title":"Fremdschl\u00fcssel","text":"<p>Ein Fremdschl\u00fcssel wird ben\u00f6tigt, um zwei Tabellen bzw. zwei Objekte miteinander zu verkn\u00fcpfen. Was in der einen Tabelle ein Fremdschl\u00fcssel ist, ist in der anderen Tabelle ein Prim\u00e4rschl\u00fcssel. In einem ER-Diagramm wird der Fremdschl\u00fcssel gestrichelt umrandet (andere Notationen unterstreichen den Fremdschl\u00fcssel gestrichelt).</p> <p></p> <p>Das abgebildete ERM kann als folgende Tabellen verstanden werden:</p> <p></p>"},{"location":"kapitel_03.html#informationsmaterial-m32-grundlagen-der-beziehungstypen-kardinalitaten","title":"Informationsmaterial M|3.2: Grundlagen der Beziehungstypen / Kardinalit\u00e4ten","text":"<p>Die Beziehung von Objekten (Entit\u00e4ten) untereinander wird durch Kardinalit\u00e4ten dargestellt. In einem ER-Diagramm kann somit dargestellt werden, wie viele Objekte mit einem anderen Objekt in Beziehung stehen k\u00f6nnen. Die Bestimmung und Festlegung von Beziehungstypen stellt eine wichtige Grundlage des Datenbankentwurfes dar.</p>"},{"location":"kapitel_03.html#1-zu-1-beziehung-11","title":"1-zu-1-Beziehung (1:1)","text":"<p>Bei einer 1-zu-1-Beziehung steht jede Entit\u00e4t des einen Entit\u00e4tstyps mit einer Entit\u00e4t des anderen Entit\u00e4tstyps in Beziehung und andersherum. 1-zu-1-Beziehungen sind relativ selten, da schnell Ausnahmen entstehen k\u00f6nnen.</p> <p>Beispiel: Eine Frau ist mit genau einem Mann verheiratet. Die Darstellung in einem ER-Diagramm ist wie folgt:</p> <p></p> <p>Ein weiteres Beispiel: Ein Schiff hat genau ein Schiffskennzeichen.</p> <p>Die Zuordnung des Fremdschl\u00fcssels in der 1:1-Beziehung ist in beiden Tabellen m\u00f6glich. Manchmal erscheint eine Tabelle logischer, als die andere; dies ist fallabh\u00e4ngig.</p>"},{"location":"kapitel_03.html#1-zu-n-beziehung-1n","title":"1-zu-n-Beziehung (1:n)","text":"<p>Die 1-zu-n-Beziehung ist die h\u00e4ufigste Kardinalit\u00e4t. Eine einzelne Entit\u00e4t des einen Entit\u00e4tstyps steht dabei mit mehreren Entit\u00e4ten eines anderen Entit\u00e4tstyps in Beziehung. Sofern keine 1-zu-1-Beziehung vorhanden ist, wird bei einem Datenbankentwurf angestrebt, eine 1-zu-n-Beziehung herzustellen.</p> <p>Beispiel: In der Tabelle aus den vorherigen Beispielen hat ein Pressetext z.B. immer genau einen Autor. Ein Autor kann aber mehrere Pressetexte verfassen. Die Darstellung in einem ER-Diagramm ist wie folgt:</p> <p></p> <p>Ein weiteres Beispiel: Eine Abteilung besteht aus mehreren Mitarbeitern. Jeder Mitarbeiter ist genau einer Abteilung zugeordnet.</p> <p>Der Fremdschl\u00fcssel wird bei der 1:n-Beziehung immer auf der n-Seite hinzugef\u00fcgt.</p>"},{"location":"kapitel_03.html#n-zu-m-beziehung-nm","title":"n-zu-m-Beziehung (n:m)","text":"<p>Jede Entit\u00e4t eines Entit\u00e4tstyps steht mit beliebig vielen Entit\u00e4ten des anderen Entit\u00e4tstyps in Beziehung. Ebenso verh\u00e4lt es sich umgekehrt. Ein naheliegendes Beispiel sind Mitarbeiter und Projekte. W\u00e4hrend ein Mitarbeiter an mehreren Projekten arbeiten kann, sind in einem Projekt auch mehrere Mitarbeiter besch\u00e4ftigt. Dieses Beispiel w\u00fcrde wie folgt in einem ER-Diagramm dargestellt werden:</p> <p></p> <p>In der Praxis sind n-zu-m-Beziehungen in Datenbanken schwierig zu handhaben, genau genommen m\u00fcsste die Darstellung mit einer Beziehungsentit\u00e4t gew\u00e4hlt werden. Diese wird als Doppel-Raute dargestellt. In manchen ER-Diagrammen findet man auch Darstellungen mit einer Raute in einem Rechteck (also der Mischung der Symbole von Entit\u00e4t und Beziehung). Das Beispiel s\u00e4he dann als Beziehungsentit\u00e4t wie folgt aus:</p> <p></p> <p>Werden im Beispiel die Prim\u00e4r- und Fremdschl\u00fcssel erg\u00e4nzt erhalten wir folgende Darstellung:</p> <p></p> <p>Eine Umsetzung in den Datenbanksprachen ist entgegen der ER-Diagramme nicht m\u00f6glich. Dies liegt daran, dass Werte immer atomar abgespeichert werden m\u00fcssen. Also k\u00f6nnten in einer Zelle in der Tabelle nicht mehrere Angaben gemacht werden. Es k\u00f6nnten z.B. Redundanzen und Inkonsistenzen auftreten. Man bedient sich daher eines Tricks: einer zus\u00e4tzlichen Tabelle. Im Beispiel wird aus der Beziehung arbeitet in die Tabelle / Beziehungsentit\u00e4t arbeitet_in geschaffen. Hierbei stehen Mitarbeiter und arbeitet_in im Verh\u00e4ltnis 1:n. andererseits stehen arbeitet_in und Projekt ebenfalls im Verh\u00e4ltnis 1:n.</p> <p>Bei einer Beziehungsentit\u00e4t wird ein neuer Prim\u00e4rschl\u00fcssel mit dem Namen der vorherigen Beziehung gebildet. Diesem werden jeweils die Fremdschl\u00fcssel beider angeschlossener Tabellen zugeordnet.</p>"},{"location":"kapitel_03.html#kompetenz-31-er-diagramme-erstellen","title":"Kompetenz 3.1: ER-Diagramme erstellen","text":"<p>Der Aufbau eines ERM ist nun bekannt, folgend soll ein n\u00e4herer Blick auf die Beziehungstypen geworfen werden. Au\u00dferdem ist ein erstes ER-Diagramm zu erstellen.</p>"},{"location":"kapitel_03.html#arbeitsauftrag-a32-erm-beziehungstypen","title":"Arbeitsauftrag A|3.2: ERM - Beziehungstypen","text":"<p>Interaktives Element im Moodle-Kurs</p>"},{"location":"kapitel_03.html#arbeitsauftrag-a33-das-erste-er-diagramm","title":"Arbeitsauftrag A|3.3: Das erste ER-Diagramm","text":"<p>Im Rahmen Ihrer T\u00e4tigkeit in der Bertram System Electronics GmbH &amp; Co. KG erstellen Sie Datenbanken f\u00fcr verschiedene Kunden. Einer der Gro\u00dfkunden ist der Hannover Airport mit vielen verschiedenen Subunternehmen und Airlines. Die AirHannover hat Ihnen folgende Fakten \u00fcbermittelt und bittet Sie, hierzu das entsprechende ERM zu erstellen:</p> <ul> <li>Das Personal der Fluggesellschaft AirHannover hat einen Nachnamen und einen Vornamen.</li> <li>Jedes Personalmitglied bekleidet genau einen Dienstrang, der sich durch eine Bezeichnung und eine Gehaltsklasse auszeichnet.</li> <li>Ein Dienstrang kann von mehreren Personalmitgliedern bekleidet werden.</li> <li>Jedes Personalmitglied begleitet mehrere Reisen, die durch einen ReisePK und ein Datum beschrieben werden.</li> <li>Eine Reise wird von mehreren Personalmitgliedern begleitet.</li> </ul> <p>Aufgaben:</p> <ol> <li>Erstellen Sie das ERM.</li> <li>Erg\u00e4nzen Sie falls n\u00f6tig Schl\u00fcsselattribute.</li> <li>Erstellen Sie das Datenbankschema in Kurzschreibweise.</li> </ol>"},{"location":"kapitel_03.html#informationsmaterial-m33-kurzschreibweise","title":"Informationsmaterial M|3.3: Kurzschreibweise","text":"<p>Die Kurzschreibweise zu einer Datenbank ist der zweite Modellierungsschritt. Da in den ER-Diagrammen in der Regel nur die Schl\u00fcsselattribute (PK &amp; FK) eingetragen werden, sollen in der Kurzschreibweise auch die normalen Attribute betrachtet werden.</p> <p></p> <p>Die Kurzschreibweise zum oben genannten Beispiel s\u00e4he wie folgt aus*:</p> <p>tbl_rezept(rezeptPK, bezeichnung) tbl_beinhaltet(beinhaltetPK, rezeptFK, zutatFK, menge) tbl_zutat(zutatPK, lagerortFK, masseinheit, menge, bezeichnung) tbl_lagerort(lagerortPK, bezeichnung, temperatur)</p> <p>(*) der FK wird, wenn die Kurzschreibweise per Hand geschrieben wird, gestrichelt unterstrichen.</p>"},{"location":"kapitel_03.html#informationsmaterial-m34-erm-konventionen","title":"Informationsmaterial M|3.4: ERM-Konventionen","text":""},{"location":"kapitel_03.html#entitat","title":"Entit\u00e4t","text":"<ul> <li>Darstellungsform: Rechteck</li> <li>im Singular</li> <li>klein geschrieben</li> <li>keine Umlaute/Sonderzeichen/Leerzeichen</li> </ul>"},{"location":"kapitel_03.html#attribut_1","title":"Attribut","text":"<ul> <li>Darstellungsform: Ellipse</li> <li>im Singular</li> <li>klein geschrieben</li> <li>keine Umlaute/Sonderzeichen/Leerzeichen</li> </ul>"},{"location":"kapitel_03.html#primarschlusselattribute","title":"Prim\u00e4rschl\u00fcsselattribute","text":"<ul> <li>Darstellungsform: Ellipse, Attributname unterstrichen</li> <li>Attributname lautet wie die Entit\u00e4t mit angeh\u00e4ngtem \"PK\"</li> <li>im Singular</li> <li>klein geschrieben</li> <li>keine Umlaute/Sonderzeichen/Leerzeichen</li> </ul>"},{"location":"kapitel_03.html#fremdschlusselattribute","title":"Fremdschl\u00fcsselattribute","text":"<ul> <li>Darstellungsform: gestrichelte Ellipse oder Ellipse mit gestrichelt unterstrichenem Attributnamen</li> <li>Attributname lautet wie die Entit\u00e4t, auf die sich der Name bezieht mit angeh\u00e4ngtem \"FK\"</li> <li>im Singular</li> <li>klein geschrieben</li> <li>keine Umlaute/Sonderzeichen/Leerzeichen</li> </ul>"},{"location":"kapitel_03.html#beziehungen","title":"Beziehungen","text":"<ul> <li>Darstellungsform: Raute</li> <li>Kardinalit\u00e4ten gerne in die N\u00e4he der Raute schreiben</li> <li>Kanten der Beziehungen immer parallel zum Seitenrand, nicht quer/diagonal zeichnen</li> <li>m\u00f6glichst treffend benennen, aber \"hat\" funktioniert immer</li> <li>im Singular</li> <li>klein geschrieben</li> <li>keine Umlaute/Sonderzeichen/Leerzeichen</li> <li>bei mehreren Worten ggf. mit Unterstrichen \"_\" teilen (z.B. <code>gehoert_zu</code>)</li> </ul>"},{"location":"kapitel_03.html#beziehungsentitaten","title":"Beziehungsentit\u00e4ten","text":"<ul> <li>Darstellungsform: Doppelte Raute oder Rechteck, das eine Raute umzeichnet</li> <li>m\u00f6glichst treffend benennen, hier \"hat\" vermeiden</li> <li>im Singular</li> <li>klein geschrieben</li> <li>keine Umlaute/Sonderzeichen/Leerzeichen</li> <li>bei mehreren Worten ggf. mit Unterstrichen \"_\" teilen (z.B. <code>gehoert_zu</code>)</li> </ul>"},{"location":"kapitel_03.html#kompetenz-32-prozess-der-normalisierung-berucksichtigen","title":"Kompetenz 3.2: Prozess der Normalisierung ber\u00fccksichtigen","text":"<p>Thilo Ostiem hat Matthias Thale bereits viel weitergeholfen, sodass erste ER-Diagramme entstanden sind. Zwischen den Recherchen zu Datenbanken f\u00e4llt nun Matthias Thale ein Ausdruck des Au\u00dfendienstes in die H\u00e4nde. Hierauf wurden potenzielle Neukunden erfasst. Diese Daten m\u00f6chte er nun so aufbereiten, dass sie in eine Datenbank eingetragen werden k\u00f6nnen.</p> <p>Dabei ist ihm klar: es d\u00fcrfen keine Daten redundant eingetragen werden oder Widerspr\u00fcche auftauchen. Er bekommt den Tipp von Thilo Ostiem, sich einmal das Themengebiet der \"Normalisierung\" anzusehen.</p> <p></p>"},{"location":"kapitel_03.html#arbeitsauftrag-a34-tabellen-beurteilen","title":"Arbeitsauftrag A|3.4: Tabellen beurteilen","text":"<p>Beurteilen Sie die vorliegende Tabelle (s.u.). Welche Probleme k\u00f6nnten sich bei der Erfassung der vorliegenden Tabelle in einer Datenbank ergeben?</p> <p>Stellen Sie erste Verbesserungsvorschl\u00e4ge f\u00fcr die abgebildete Tabelle zusammen.</p> <p></p>"},{"location":"kapitel_03.html#arbeitsauftrag-a35-prozess-zur-normalisierung","title":"Arbeitsauftrag A|3.5: Prozess zur Normalisierung","text":"<ol> <li>Erl\u00e4utern Sie die Problematik in Datenbanken, wenn Redundanzen auftreten sollten. Nennen Sie Beispiele.</li> <li>Beschreiben Sie in eigenen Worten die Notwendigkeit der Normalisierung einer Tabelle.</li> <li>Z\u00e4hlen Sie in Stichpunkten die Kriterien auf, die notwendig f\u00fcr das Erreichen der ersten, der zweiten bzw. der dritten Normalform sind.</li> </ol>"},{"location":"kapitel_03.html#informationsmaterial-m35-normalisierung-einer-datenbank","title":"Informationsmaterial M|3.5: Normalisierung einer Datenbank","text":""},{"location":"kapitel_03.html#redundanzen-notwendigkeit-einer-normalisierung","title":"Redundanzen / Notwendigkeit einer Normalisierung","text":"<p>Wie bereits bekannt, ist es eine Grundregel, Redundanzen in Datenbanken zu vermeiden. Gleiche Inhalte d\u00fcrfen somit nicht in mehreren Datenfeldern vorkommen. Ein Datenfeld darf au\u00dferdem nur einen einzigen Eintrag enthalten.</p> <p>Beispiel: Statt dem Datenfeld \"Name\" werden die Felder \"Vorname\" und \"Nachname\" angelegt.</p> <p>Liegen \"Verst\u00f6\u00dfe\" gegen diese Grundregel vor, m\u00fcssen diese Daten in Normalform gebracht werden. Diesen Prozess nennt man auch Normalisierung.</p> <p>In der Regel wird dazu eine schrittweise Vorgehensweise angewandt, sofern die Daten nicht bereits in geeigneter Form vorliegen. Unnormalisierte Tabellen wie in der Ausgangssituation werden auch als nullte Normalform bezeichnet. Die Tabellen einer relationalen Datenbank werden zuerst in die erste Normalform, dann in die zweite Normalform und letztendlich in die dritte Normalform gebracht. Erst Tabellen, die sich in der dritten Normalform befinden, eignen sich f\u00fcr die Verwendung in einer relationalen Datenbank.</p>"},{"location":"kapitel_03.html#erste-normalform","title":"Erste Normalform","text":"<p>Die erste Normalform besagt, dass kein Datenfeld mehrfach in einer Tabelle vorkommen darf. Mehrfach enthaltene Datenfelder werden aus der Tabelle entfernt.</p> <p>Tabelle in der nullten Normalform:</p> <p></p> <p>Tabelle in der ersten Normalform:</p> <p></p>"},{"location":"kapitel_03.html#zweite-normalform","title":"Zweite Normalform","text":"<p>F\u00fcr die zweite Normalform muss zun\u00e4chst die erste Normalform erf\u00fcllt sein. Jedes Datenfeld eines Datensatzes, das selbst kein Schl\u00fcssel ist, muss vom Schl\u00fcsselfeld abh\u00e4ngen.</p> <p>In unserem Beispiel wurde noch kein Schl\u00fcsselfeld vergeben. An dieser Stelle bietet sich eine Vergabe eines k\u00fcnstlichen Prim\u00e4rschl\u00fcssels an. Die potenziellen Kunden erhalten eine Kundennummer. Alle weiteren Datenfelder bzw. Attribute (z.B. Stra\u00dfe, Ort etc.) sind vom Schl\u00fcsselfeld abh\u00e4ngig und k\u00f6nnen so bestehen bleiben.</p> <p>Tabelle in der zweiten Normalform:</p> <p></p> <p>Bei der Vergabe von Prim\u00e4rschl\u00fcsseln wird deutlich, dass die letzten Eintr\u00e4ge doppelt angelegt wurden, also redundant sind. Redundanzen werden sp\u00e4testens an dieser Stelle eliminiert.</p>"},{"location":"kapitel_03.html#dritte-normalform","title":"Dritte Normalform","text":"<p>F\u00fcr die dritte Normalform muss die (erste und) zweite Normalform erf\u00fcllt sein. Dar\u00fcber hinaus darf jedes Datenfeld eines Datensatzes, das kein Schl\u00fcssel (-feld) ist, nur vom Schl\u00fcsselfeld und nicht von anderen Feldern eines Datensatzes abh\u00e4ngig sein.</p> <p>Somit d\u00fcrfen keine Abh\u00e4ngigkeiten zwischen weiteren Feldern eines Datensatzes bestehen. Ist dies der Fall, wird eine weitere Tabelle angelegt.</p> <p>Tabelle in der dritten Normalform:</p> <p></p> <p>In dem Beispiel wird deutlich, dass eine Abh\u00e4ngigkeit zwischen Ort und Postleitzahl besteht und somit ein Versto\u00df gegen die dritte Normalform vorliegt. Um diese Abh\u00e4ngigkeit aufzul\u00f6sen, wird eine zweite Tabelle, ein \"PLZ-Verzeichnis\", angelegt. Die Postleitzahl fungiert hierbei als nat\u00fcrlicher Prim\u00e4rschl\u00fcssel. \u00dcber die Abfrage der PLZ kann nun automatisch der zugeh\u00f6rige Ort angezeigt werden.</p> <p>Zus\u00e4tzliches Material, weitere \u00dcbungen &amp; Tipps</p> <p>Die folgenden \u00dcbungen und Tipps &amp; Tricks dienen Ihrer pers\u00f6nlichen Wiederholung und Vorbereitung auf Klassenarbeiten, Pr\u00fcfungen etc.Ich kann, weil ich will, was ich muss! (Immanuel Kant)</p>"},{"location":"kapitel_03.html#zusatzmaterial","title":"Zusatzmaterial","text":"<p>// TODO Links einf\u00fcgen</p> <p>Lizenz</p> <p>Der PV-DB-Kurs von  Oliver Schwenke &amp; Andr\u00e9 Neumann ist lizenziert unter einer Creative Commons Namensnennung - Nicht-kommerziell - Weitergabe unter gleichen Bedingungen 4.0 International Lizenz. Fragen, Hinweise etc. an neumann@mmbbs.de.</p>"},{"location":"kapitel_04.html","title":"Kapitel 4: Entwurf von Datenbanken f\u00fcr MySQL","text":"<p>In diesem Kapitel ...</p> <ul> <li>... erstellen Sie verschiedene ERM.</li> <li>... ber\u00fccksichtigen Sie die Normalisierung in der Datenbankplanung.</li> </ul>"},{"location":"kapitel_04.html#kompetenz-40-normalisierte-datenbanken-planen","title":"Kompetenz 4.0: Normalisierte Datenbanken planen","text":"<p>Bis die Datenbank der BSE GmbH erstellt werden kann, m\u00fcssen noch Informationen eingeholt werden. Dazu wurde eine Besprechung angesetzt. In der Zwischenzeit sollen f\u00fcr andere Kundenauftr\u00e4ge erste Datenbankvorlagen erstellt werden.</p> <p></p>"},{"location":"kapitel_04.html#arbeitsauftrag-a40-erm-universitat-erstellen","title":"Arbeitsauftrag A|4.0: ERM Universit\u00e4t erstellen","text":"<p>Es soll ein ER-Modell f\u00fcr einen Kunden erstellt werden:</p> <ol> <li>Das ER-Modell erstellen Sie sauber auf einem Blatt Papier mit Lineal und Stift.</li> <li>Erstellen Sie auf Grundlage des Beispiels ein redundanzfreies ERM zur Erfassung des Problems. Ber\u00fccksichtigen Sie alle notwendigen Entit\u00e4ten und Beziehungen. Achten Sie auf eine saubere und konventionsgerechte Darstellung.</li> <li>Erg\u00e4nzen Sie notwendige Beziehungsentit\u00e4ten und Schl\u00fcsselattribute und kennzeichnen Sie diese. Weitere Attribute sind im ERM nicht relevant.</li> <li>Geben Sie f\u00fcr alle Entit\u00e4ten das relationale Datenbankmodell in Kurzschreibweise an und erg\u00e4nzen Sie hier falls notwendig die normalen Attribute.</li> </ol> <p>Universit\u00e4t</p> <p>Studenten besuchen Vorlesungen, die von einem Professor gef\u00fchrt werden. F\u00fcr die Vorlesungen werden B\u00fccher ben\u00f6tigt.</p>"},{"location":"kapitel_04.html#arbeitsauftrag-a41-erm-der-datenbank-zur-bse-plattform","title":"Arbeitsauftrag A|4.1: ERM der Datenbank zur BSE-Plattform","text":"<ol> <li>Lesen Sie sich das Protokoll (s. Informationsmaterial im Kurs) aus der Besprechung der Gesch\u00e4ftsf\u00fchrung durch.</li> <li>Markieren Sie in unterschiedlichen Farben m\u00f6gliche Entit\u00e4ten und Attribute f\u00fcr ein Entity- Relationship-Modell (ERM).</li> <li> <p>Zeichnen Sie ein ERM f\u00fcr die Verkaufsplattform und ber\u00fccksichtigen Sie f\u00fcr alle folgenden Aufgaben diese Konventionen:</p> </li> <li> <p>Der Datenbankname soll <code>db_bseverkauf</code> lauten.</p> </li> <li>Die Tabellennamen beginnen mit <code>tbl_</code> und bilden die Entit\u00e4ten im Singular ab: bspw. f\u00fcr eine Sammlung an Blumen w\u00fcrde die Tabelle <code>tbl_blume</code> hei\u00dfen.</li> <li>Die Prim\u00e4rschl\u00fcsselattribute enden auf <code>PK</code>, die Fremdschl\u00fcsselattribute auf <code>FK</code>.</li> <li>Beziehungen sollen inklusive der Kardinalit\u00e4ten eingezeichnet werden.</li> <li>Die Nutzung von Umlauten und Sonderzeichen in Entit\u00e4ten und Attributen ist zur Fehlervermeidung verboten.</li> </ol>"},{"location":"kapitel_04.html#arbeitsauftrag-a42-kurzschreibweise-der-datenbank-zur-bse-plattform","title":"Arbeitsauftrag A|4.2: Kurzschreibweise der Datenbank zur BSE-Plattform","text":"<p>Erstellen Sie die Kurzschreibweise zu dem ERM der BSE GmbH &amp; Co. KG auf Basis der besprochenen Ergebnisse.</p> <p>Zus\u00e4tzliches Material, weitere \u00dcbungen &amp; Tipps</p> <p>Die folgenden \u00dcbungen und Tipps &amp; Tricks dienen Ihrer pers\u00f6nlichen Wiederholung und Vorbereitung auf Klassenarbeiten, Pr\u00fcfungen etc.Ich kann, weil ich will, was ich muss! (Immanuel Kant)</p>"},{"location":"kapitel_04.html#ubungen","title":"\u00dcbungen","text":""},{"location":"kapitel_04.html#ubung-ue40-erm-kaufvorgang-erstellen","title":"\u00dcbung UE|4.0: ERM Kaufvorgang erstellen","text":"<p>Es soll ein ER-Modell f\u00fcr einen Kunden erstellt werden:</p> <ol> <li>Das ER-Modell erstellen Sie sauber auf einem Blatt Papier mit Lineal und Stift.</li> <li>Erstellen Sie auf Grundlage des Beispiels ein redundanzfreies ERM zur Erfassung des Problems. Ber\u00fccksichtigen Sie alle notwendigen Entit\u00e4ten und Beziehungen. Achten Sie auf eine saubere und konventionsgerechte Darstellung.</li> <li>Erg\u00e4nzen Sie notwendige Beziehungsentit\u00e4ten und Schl\u00fcsselattribute und kennzeichnen Sie diese. Weitere Attribute sind im ERM nicht relevant.</li> <li>Geben Sie f\u00fcr alle Entit\u00e4ten das relationale Datenbankmodell in Kurzschreibweise an und erg\u00e4nzen Sie hier falls notwendig die normalen Attribute.</li> </ol> <p>Kaufvorgang</p> <p>Kunden haben Warenk\u00f6rbe. In den Warenk\u00f6rben liegen Artikel.</p>"},{"location":"kapitel_04.html#ubung-ue41-erm-autovermietung-erstellen","title":"\u00dcbung UE|4.1: ERM Autovermietung erstellen","text":"<p>Es soll ein ER-Modell f\u00fcr einen Kunden erstellt werden:</p> <ol> <li>Das ER-Modell erstellen Sie sauber auf einem Blatt Papier mit Lineal und Stift.</li> <li>Erstellen Sie auf Grundlage des Beispiels ein redundanzfreies ERM zur Erfassung des Problems. Ber\u00fccksichtigen Sie alle notwendigen Entit\u00e4ten und Beziehungen. Achten Sie auf eine saubere und konventionsgerechte Darstellung.</li> <li>Erg\u00e4nzen Sie notwendige Beziehungsentit\u00e4ten und Schl\u00fcsselattribute und kennzeichnen Sie diese. Weitere Attribute sind im ERM nicht relevant.</li> <li>Geben Sie f\u00fcr alle Entit\u00e4ten das relationale Datenbankmodell in Kurzschreibweise an und erg\u00e4nzen Sie hier falls notwendig die normalen Attribute.</li> </ol> <p>Autovermietung</p> <p>Kunden k\u00f6nnen Autos mieten. Ein Auto geh\u00f6rt zu einer Marke und die Marke hat verschiedene Modelle.</p>"},{"location":"kapitel_04.html#ubung-ue42-erm-schulungsunternehmen-erstellen","title":"\u00dcbung UE|4.2: ERM Schulungsunternehmen erstellen","text":"<p>Es soll ein ER-Modell f\u00fcr einen Kunden erstellt werden:</p> <ol> <li>Das ER-Modell erstellen Sie sauber auf einem Blatt Papier mit Lineal und Stift.</li> <li>Erstellen Sie auf Grundlage des Beispiels ein redundanzfreies ERM zur Erfassung des Problems. Ber\u00fccksichtigen Sie alle notwendigen Entit\u00e4ten und Beziehungen. Achten Sie auf eine saubere und konventionsgerechte Darstellung.</li> <li>Erg\u00e4nzen Sie notwendige Beziehungsentit\u00e4ten und Schl\u00fcsselattribute und kennzeichnen Sie diese. Weitere Attribute sind im ERM nicht relevant.</li> <li>Geben Sie f\u00fcr alle Entit\u00e4ten das relationale Datenbankmodell in Kurzschreibweise an und erg\u00e4nzen Sie hier falls notwendig die normalen Attribute.</li> </ol> <p>Schulungsunternehmen</p> <p>Das Schulungsunternehmen MeisterMedia bietet Kurse an, die von Referenten geleitet werden (Teamteaching ist m\u00f6glich). Kurse k\u00f6nnen sich \u00fcber mehrere Tage erstrecken und werden pro Tag abgerechnet. F\u00fcr die Kurse muss jeweils ein Raum zur Verf\u00fcgung gestellt werden. Einige Referenten sind fest angestellt, andere sind auf selbstst\u00e4ndiger Basis f\u00fcr das Unternehmen t\u00e4tig.</p>"},{"location":"kapitel_04.html#ubung-ue43-erm-lieferungen-erstellen","title":"\u00dcbung UE|4.3: ERM Lieferungen erstellen","text":"<p>Es soll ein ER-Modell f\u00fcr einen Kunden erstellt werden:</p> <ol> <li>Das ER-Modell erstellen Sie sauber auf einem Blatt Papier mit Lineal und Stift.</li> <li>Erstellen Sie auf Grundlage des Beispiels ein redundanzfreies ERM zur Erfassung des Problems. Ber\u00fccksichtigen Sie alle notwendigen Entit\u00e4ten und Beziehungen. Achten Sie auf eine saubere und konventionsgerechte Darstellung.</li> <li>Erg\u00e4nzen Sie notwendige Beziehungsentit\u00e4ten und Schl\u00fcsselattribute und kennzeichnen Sie diese. Weitere Attribute sind im ERM nicht relevant.</li> <li>Geben Sie f\u00fcr alle Entit\u00e4ten das relationale Datenbankmodell in Kurzschreibweise an und erg\u00e4nzen Sie hier falls notwendig die normalen Attribute.</li> </ol> <p>Lieferungen</p> <p>Ein Lieferant hat einen Vor- und Nachnamen und eine Anschrift (PLZ, Ort, Stra\u00dfe). Ein Lieferant liefert mehrere Artikel. Ein Artikel hat eine Bezeichnung und ist in einer bestimmten Menge vorhanden. Ein Artikel wird von mehreren Lieferanten geliefert. Ein bestimmter Artikel kann von einem bestimmten Lieferanten an verschiedenen Tagen wiederholt geliefert werden, in diesem Zusammenhang ist das Lieferdatum wichtig. Des weiteren interessiert dabei der Lieferpreis und die Lieferzeit. In einem Lager werden mehrere Artikel gelagert. Ein Lager hat eine Standortbezeichnung. Ein Artikel wird in einem Lager aufbewahrt.</p>"},{"location":"kapitel_04.html#ubung-ue44-erm-vermietung-erstellen","title":"\u00dcbung UE|4.4: ERM Vermietung erstellen","text":"<p>Es soll ein ER-Modell f\u00fcr einen Kunden erstellt werden:</p> <ol> <li>Das ER-Modell erstellen Sie sauber auf einem Blatt Papier mit Lineal und Stift.</li> <li>Erstellen Sie auf Grundlage des Beispiels ein redundanzfreies ERM zur Erfassung des Problems. Ber\u00fccksichtigen Sie alle notwendigen Entit\u00e4ten und Beziehungen. Achten Sie auf eine saubere und konventionsgerechte Darstellung.</li> <li>Erg\u00e4nzen Sie notwendige Beziehungsentit\u00e4ten und Schl\u00fcsselattribute und kennzeichnen Sie diese. Weitere Attribute sind im ERM nicht relevant.</li> <li>Geben Sie f\u00fcr alle Entit\u00e4ten das relationale Datenbankmodell in Kurzschreibweise an und erg\u00e4nzen Sie hier falls notwendig die normalen Attribute.</li> </ol> <p>Vermietung</p> <p>Es gibt Mieter (mit Namen, Vornamen, Geburtsdatum, Einkommen, usw.) und Eigent\u00fcmer (ebenfalls mit Namen, Vornamen, Geburtsdatum, Einkommen, usw.). Mieter mieten Wohnungen an. Wobei ein Mieter viele Wohnungen anmieten darf, aber eine Wohnung nur einem Mieter zugeordnet wird (Untermiete oder Gemeinschaftswohnungen sind ausgeschlossen). Eine Wohnung geh\u00f6rt einem Eigent\u00fcmer, der nat\u00fcrlich auch mehrere Wohnungen besitzen kann. Eine Wohnung hat eine Anzahl von Zimmern, eine Gr\u00f6\u00dfe in m\u00b2 und wenn sie vermietet wird einen Mietpreis. Eine oder mehrere Wohnungen liegen in genau einem Geb\u00e4ude. Ein Geb\u00e4ude steht in einer Stra\u00dfe und hat Eigenschaften wie Hausnummer, Anzahl Wohnungen und Baujahr. Eine Stra\u00dfe liegt in einer Gemeinde und hat Eigenschaften wie Name, Art und Zustand. Eine Gemeinde wiederum hat Eigenschaften wie Name, Einwohnerzahl und Gemeindefl\u00e4che.</p>"},{"location":"kapitel_04.html#ubung-ue45-erm-computernetzwerk-erstellen","title":"\u00dcbung UE|4.5: ERM Computernetzwerk erstellen","text":"<p>Es soll ein ER-Modell f\u00fcr einen Kunden erstellt werden:</p> <ol> <li>Das ER-Modell erstellen Sie sauber auf einem Blatt Papier mit Lineal und Stift.</li> <li>Erstellen Sie auf Grundlage des Beispiels ein redundanzfreies ERM zur Erfassung des Problems. Ber\u00fccksichtigen Sie alle notwendigen Entit\u00e4ten und Beziehungen. Achten Sie auf eine saubere und konventionsgerechte Darstellung.</li> <li>Erg\u00e4nzen Sie notwendige Beziehungsentit\u00e4ten und Schl\u00fcsselattribute und kennzeichnen Sie diese. Weitere Attribute sind im ERM nicht relevant.</li> <li>Geben Sie f\u00fcr alle Entit\u00e4ten das relationale Datenbankmodell in Kurzschreibweise an und erg\u00e4nzen Sie hier falls notwendig die normalen Attribute.</li> </ol> <p>Computernetzwerk</p> <p>F\u00fcr das Schulnetzwerk m\u00fcssen Computerteile beschafft werden. Der Systemadministrator erstellt eine Datenbank, um in Frage kommende Lieferanten schneller ermitteln zu k\u00f6nnen. Zu einem Lieferanten sind der Name der Firma, der Ansprechpartner und deren Telefonnummer sowie die Adresse mit Stra\u00dfe, Hausnummer, Postleitzahl und Ort relevant. Computerteile k\u00f6nnen von verschiedenen Lieferanten bezogen werden, die Lieferanten haben gew\u00f6hnlich auch mehrere Teile im Angebot. Computerteile haben eine Bezeichnung und ein Gewicht. Au\u00dferdem wird jedes Computerteil genau einer bestimmten Baugruppe, wie zum Beispiel Grafikkarte, CPU usw. zugeordnet. Einer Baugruppe k\u00f6nnen mehrere Computerteile zugeordnet sein.</p>"},{"location":"kapitel_04.html#zusatzmaterial","title":"Zusatzmaterial","text":"<p>// TODO Links einf\u00fcgen</p> <p>Lizenz</p> <p>Der PV-DB-Kurs von  Oliver Schwenke &amp; Andr\u00e9 Neumann ist lizenziert unter einer Creative Commons Namensnennung - Nicht-kommerziell - Weitergabe unter gleichen Bedingungen 4.0 International Lizenz. Fragen, Hinweise etc. an neumann@mmbbs.de.</p>"},{"location":"kapitel_05.html","title":"Kapitel 5: Realisierung einer Datenbank mit MySQL","text":"<p>In diesem Kapitel ...</p> <ul> <li>... installieren Sie einen MySQL-Server.</li> <li>... analysieren Sie MySQL-Datentypen.</li> <li>... erstellen Sie eine MySQL-Datenbank.</li> </ul>"},{"location":"kapitel_05.html#handlungssituation","title":"Handlungssituation","text":"<p>Matthias Thale hat ein fertiges ER-Diagramm f\u00fcr die Datenbank vorliegen und m\u00f6chte diese nun in MySQL realisieren. Dazu hat er sich Tipps von Thilo Ostiem geholt: Installation des MySQL-Servers, Erstellung eines relationalen Datenbank-Schemas sowie die damit verbundene Auseinandersetzung mit den MySQL-Datentypen stehen nun auf dem Zettel.</p> <p>Hinweis zum MySQL-Server</p> <p>Um die Aufgaben der folgenden Kapitel zu bearbeiten ben\u00f6tigen Sie nicht zwingend einen lokalen MySQL-Server. Sie k\u00f6nnen auch die in den kommenden Kapiteln verlinkte Datenbank als webbasierte Version nutzen. Dennoch ist es sinnvoll, sich einmal mit der Installation eines Datenbanksystems auseinanderzusetzen.</p>"},{"location":"kapitel_05.html#kompetenz-50-lokale-datenbankserver-installieren","title":"Kompetenz 5.0: Lokale Datenbankserver installieren","text":"<p>Im ersten Schritt soll der MySQL-Server installiert werden. Hierzu bestehen verschiedene Optionen. Neben der Installation von MySQL auf einem Linux-System besteht auch die M\u00f6glichkeit, via XAMPP auf verschiedenen Plattformen einen Server einzurichten.</p>"},{"location":"kapitel_05.html#arbeitsauftrag-a50-installation-des-mysql-servers-auf-dem-notebook-mit-xampp","title":"Arbeitsauftrag A|5.0: Installation des MySQL-Servers auf dem Notebook mit XAMPP","text":"<p>F\u00fchren Sie die Installation f\u00fcr den MySQL-Server auf Ihrem Endger\u00e4t durch. XAMPP bietet hierf\u00fcr eine einfache Option, einen Datenbank- und bei Wunsch auch einen Web-Server zu installieren:</p> <p>https://www.apachefriends.org/de/index.html</p>"},{"location":"kapitel_05.html#arbeitsauftrag-a51-test-des-mysql-servers","title":"Arbeitsauftrag A|5.1: Test des MySQL-Servers","text":"<p>Legen Sie eine erste Testdatenbank an:</p> <ol> <li>Starten Sie XAMPP und hierin den Apache- sowie den MySQL-Dienst.<ol> <li>Hinweis: sollte der Dienst Apache sich nicht starten lassen, kann folgendes helfen:    </li> <li>Oder dieser Link f\u00fcr die Portbelegungen: http://www.breitenfellner.info/klassenbereich/downloak/Portbelegung.pdf</li> </ol> </li> <li>\u00d6ffnen Sie phpmyadmin (z.B. \u00fcber die Adresse localhost/phpmyadmin). Die folgende \u00dcbersicht erscheint.     </li> <li>W\u00e4hlen Sie in der linken Spalte \"Neu\" aus und geben Sie im Feld \"Datenbankname\" den Titel db_test ein. Anschlie\u00dfend w\u00e4hlen Sie \"Anlegen\".     </li> <li>Der Dialog zum Erzeugen einer Tabelle wird automatisch ge\u00f6ffnet. Hierin geben Sie den ersten Tabellennamen \"tbl_kunde\" mit vier Spalten ein und best\u00e4tigen mit \"OK\".     </li> <li>Danach wird die Tabellenstruktur festgelegt. Geben Sie die im Bild erkenntlichen Daten ein (Achtung, beim Primary Key ist ein Haken im Feld \"A_I\"). Was genau Typ, L\u00e4nge/Werte usw. bedeutet, folgt sp\u00e4ter in diesem Kapitel. Schlie\u00dflich w\u00e4hlen Sie \"Speichern\".     </li> <li>Nun ist die Struktur der Tabelle angelegt und wird als \u00dcbersicht in dem Reiter \"Struktur\" angezeigt.     </li> <li>Anschlie\u00dfend wird die zweite Tabelle \"tbl_plz\" angelegt. Dazu wieder in der rechten Spalte direkt unter dem Eintrag \"db_test\" auf \"Neu\" gehen und die Tabelle mit 2 Spalten anlegen.     </li> <li>\u00dcber den Reiter \"Einf\u00fcgen\" k\u00f6nnen Sie jetzt Daten in die Tabelle eintragen. F\u00fcgen Sie die Datens\u00e4tze aus dem Bild hinzu uns w\u00e4hlen Sie dann unten \"OK\".     </li> <li>Die Postleitzahlen sind gepflegt, jetzt kann die Tabelle \"tbl_kunde\" nach gleichem Prinzip mit den folgenden Daten gef\u00fcllt werden.     </li> <li>Der vorletzte Schritt ist die Kontrolle der Daten. Dazu w\u00e4hlen Sie die Tabelle \"tbl_plz\" in der linken Spalte aus. Danach wird im Reiter \"Ansicht\" ein Auszug der Daten dargestellt.     </li> <li>Zuletzt \u00fcberpr\u00fcfen Sie die Eingabe der Kundendaten in der zweiten Tabelle. Danach ist der erste Test erfolgreich beendet.     </li> </ol>"},{"location":"kapitel_05.html#kompetenz-51-relationale-datenbankschemata-erstellen","title":"Kompetenz 5.1: Relationale Datenbankschemata erstellen","text":"<p>Mit der Installation des MySQL-Servers sind nun alle technischen Voraussetzungen erf\u00fcllt. Nun muss aus dem ER-Diagramm ein Modell abgeleitet werden, welches es Matthias Thale erm\u00f6glicht, schnell und ohne Fehler eine Datenbank auf dem Server anzulegen.</p>"},{"location":"kapitel_05.html#arbeitsauftrag-a52-erstellung-eines-relationalen-datenbank-schemas","title":"Arbeitsauftrag A|5.2: Erstellung eines relationalen Datenbank-Schemas","text":"<p>Erstellen Sie mithilfe des Informationsmaterials im Kurs aus dem ER-Diagramm (s. unten) ein sogenanntes relationales Datenbankschema. Die Grundlage hierf\u00fcr ist das vorbereitete Schema.</p> <p>ERM</p> <p></p> <p>Schema:</p> <p></p>"},{"location":"kapitel_05.html#informationsmaterial-m50-relationales-datenbank-schema","title":"Informationsmaterial M|5.0: Relationales Datenbank-Schema","text":""},{"location":"kapitel_05.html#relationales-datenbankmodell","title":"Relationales Datenbankmodell","text":"<p>Das Relationale Datenbankmodell ist das verbreitetste Datenmodell, welches in der Datenbankentwicklung als Standard genutzt wird. Das Fundament des Datenbankmodells besteht aus vier Elementen: Tabellen, Attributen, Beziehungen und die Grundlagen der relationalen Algebra.</p> <p>Sie stellt eine mathematische Beschreibung einer Tabelle und ihre Beziehung zu anderen m\u00f6glichen Tabellen dar. Die Operationen auf diese Relationen werden durch die relationale Algebra bestimmt.</p> <p>Des Weiteren ist die relationale Algebra auch die Grundlage f\u00fcr die Datenbanksprache SQL.</p> <p>Auch wenn die mathematische Gewichtung und die Abstraktion der Daten in diesem Modell sehr stark ist, sind relationale Datenbankmodelle vergleichsweise sehr einfach und flexibel zu erstellen.</p>"},{"location":"kapitel_05.html#eigenschaften-vom-relationalen-datenbankmodell","title":"Eigenschaften vom Relationalen Datenbankmodell","text":"<p>Das relationale Datenbankmodell besteht aus drei wichtigen Bausteinen:</p> <ul> <li>Tabellen</li> <li>Attributen</li> <li>Beziehungen</li> </ul> <p>Ein Relationales Datenbankmodell ist eine Ansammlung von Tabellen, die miteinander verkn\u00fcpft sind. Jede Zeile (auch Tupel genannt) in einer Tabelle ist ein Datensatz. Jedes Tupel besteht aus einer gro\u00dfen Reihe von Eigenschaften (Attributen), den Spalten der Tabelle. Ein Relationsschema legt dabei die Anzahl und den (Daten-) Typ der Attribute f\u00fcr eine Tabelle fest.</p> <p>Des Weiteren k\u00f6nnen Verkn\u00fcpfungen (Beziehungen) \u00fcber sogenannte Prim\u00e4rschl\u00fcssel hergestellt werden, um bestimme Attribute, die den gleichen Prim\u00e4rschl\u00fcssel oder in einer Detailtabelle als Fremdschl\u00fcssel besitzen, abzufragen.</p>"},{"location":"kapitel_05.html#beispiel-fur-ein-relationales-datenbankmodell","title":"Beispiel f\u00fcr ein Relationales Datenbankmodell","text":"<p>Ein gutes Beispiel f\u00fcr ein Relationales Datenbankmodell ist ein Modell, das Beziehungen zwischen den Tabellen Lager und Artikel klar widerspiegelt. Dieses Datenbankmodell basiert auf der Namenskonvention dieses Lernfeldes:</p> <p></p> <p>Dieses Beispiel f\u00fcr ein Relationales Datenbankmodell kann nur durch eine korrekte Normalisierung und deren Normalformen erstellt werden. Informationen zu den Datentypen sind in folgenden Materialien verf\u00fcgbar.</p>"},{"location":"kapitel_05.html#informationsmaterial-m51-datentypen-in-mysql","title":"Informationsmaterial M|5.1: Datentypen in MySQL","text":""},{"location":"kapitel_05.html#numerische-datentypen-fur-ganzzahlige-werte","title":"Numerische Datentypen f\u00fcr ganzzahlige Werte","text":"<p>In Feldern dieses Datentyps werden ganzzahlige Werte (Integer-Zahlen) ohne Kommastellen gespeichert.</p> Datentyp Speicherbedarf Wertebereich SMALLINT 2 Byte -32768 bis +32767 INTEGER 4 Byte -2147483648 bis +2147483647 <p>Integer-Datentypen eignen sich besonders f\u00fcr eindeutige Identifikationsnummern, z.B. Prim\u00e4rschl\u00fcssel einer Tabelle. Der Zugriff auf solche Datenfelder erfolgt besonders schnell, da Prozessoren in Computern f\u00fcr Zahlenwerte optimiert sind.</p>"},{"location":"kapitel_05.html#numerische-datentypen-fur-fliekommazahlen","title":"Numerische Datentypen f\u00fcr Flie\u00dfkommazahlen","text":"<p>Mit diesen Datentypen k\u00f6nnen Sie Zahlenwerte mit Nachkommastellen speichern. Die Datentypen unterschieden sich dabei im Wertebereich.</p> Datentyp Speicherbedarf Wertebereich FLOAT (n) 4 oder 8 Byte Die Gesamtstellenanzahl kann durch n festgelegt werden. Je nach Angabe von n k\u00f6nnen 7 bis 15 signifikante Stellen plattformunabh\u00e4ngig gespeichert werden. DOUBLE PRECISION 8 Byte 15 signifikante Stellen (keine plattformunabh\u00e4ngige Speicherung) <p>Die Datentypen k\u00f6nnen einen Zahlenwert mit der angegeben Anzahl an Gleitkommastellen speichern. Alle Ziffern nach der Anzahl signifikanter Stellen werden abgeschnitten, daher wird bei diesen Datentypen nicht immer die genaue Gr\u00f6\u00dfe gespeichert, sondern die n\u00e4herungsweise Gr\u00f6\u00dfe.</p>"},{"location":"kapitel_05.html#numerische-datentypen-fur-festkommazahlen","title":"Numerische Datentypen f\u00fcr Festkommazahlen","text":"<p>Diese Datentypen eignen sich f\u00fcr das Speichern formatierter Zahlen mit einer festen Anzahl von Nachkommastellen. Damit k\u00f6nnen z.B. W\u00e4hrungsangaben oder Messwerte gespeichert werden.</p> Datentyp Wertebereich DECIMAL(Pr\u00e4zision, Skalierung) Der Parameter Pr\u00e4zision (1-15) legt die Gesamtzahl der signifikanten Stellen der Zahl fest. Der Parameter Skalierung (1-15) bestimmt die Anzahl der Nachkommastellen, die kleiner oder gleich der Gesamtzahl der Stellen sein muss. Der DECIMAL-Datentyp definiert die minimale Anzahl der signifikanten Stellen."},{"location":"kapitel_05.html#datentypen-fur-datums-und-zeitwerte","title":"Datentypen f\u00fcr Datums- und Zeitwerte","text":"<p>F\u00fcr Datums- und Zeitwerte gibt es spezielle Datentypen. Abh\u00e4ngig vom Datenbank-Server werden unterschiedliche Wertebereiche zugelassen.</p> Datentyp Wertebereich DATE 1000-01-01 bis 9999-12-31 DATETIME 1000-01-01 00:00:00 bis 9999-12-13 23:59:59 <p>Der Type DATE erlaubt die Benutzung eines Datums ohne Zeitangabe. MySQL ruft DATE-Werte im Format \u201aYYYY-MM-DD\u2018 ab und zeigt sie auch so an.</p>"},{"location":"kapitel_05.html#datentypen-fur-zeichen-und-texte","title":"Datentypen f\u00fcr Zeichen und Texte","text":"<p>Es gibt verschiedene Datentypen f\u00fcr die Speicherung von Textinformationen. Hierbei existieren verschiedene Datentypen mit variabler und fester Menge.</p> Datentyp Wertebereich CHAR(L\u00e4nge) Dieser Datentyp dient zum Speichern beliebiger Textinformationen. Die maximale L\u00e4nge wird damit als Parameter angegeben (L\u00e4nge = 1 bis 255). Unabh\u00e4ngige von der tats\u00e4chlichen L\u00e4nge der gespeicherten Information wird stets die bei der Definition angegebene Anzahl an Zeichen gespeichert. VARCHAR(L\u00e4nge) Zum Speichern beliebiger Textinformationen wird auch dieser Typ verwendet. Auch hier wird die maximale L\u00e4nge (1 bis 255) als Parameter \u00fcbergeben. In ein Datenfeld dieses Typs eingehender Text wird in seiner tats\u00e4chlichen L\u00e4nge gespeichert. BLOB Dieser Datentyp (Binary Large Objects) wird zum Speichern gro\u00dfer, auch bin\u00e4rer Datenmengen eingesetzt, z.B. sehr gro\u00dfer Textdateien, Grafiken, Bilder oder Videos. TEXT Wie auch in BLOB-Feldern k\u00f6nnen Sie hier gr\u00f6\u00dfere Informationsmengen mit variabler L\u00e4nge speichern. Der Unterschied zu BLOB-Feldern liegt in der anderen Sortierreihenfolge, die bei TEXT-Feldern unabh\u00e4ngig von der Gro\u00df- und Kleinschreibung ist. <p>Die Verarbeitung des Datentyps CHAR erfolgt schneller als auf VARCHAR-Datenfeldern. VARCHAR-Datenfelder hingegen eignen sich besonders f\u00fcr die Speicherung von unterschiedlich langen Texten.</p>"},{"location":"kapitel_05.html#logischer-datentyp","title":"Logischer Datentyp","text":"Datentyp Erkl\u00e4rung BOOLEAN Logische Werte Ja/Nein bzw. True/False. NULL ist ebenfalls m\u00f6glich und wird als UNKNOWN interpretiert."},{"location":"kapitel_05.html#kompetenz-52-datenbanken-in-sql-anlegen","title":"Kompetenz 5.2: Datenbanken in SQL anlegen","text":"<p>Mit dem relationalen Datenbank-Schema haben Sie eine Basis f\u00fcr die Realisierung der Datenbank geschaffen. Diese Umsetzung in MySQL wird an dieser Stelle begonnen.</p>"},{"location":"kapitel_05.html#arbeitsauftrag-a53-anlegen-der-datenbank-in-mysql","title":"Arbeitsauftrag A|5.3: Anlegen der Datenbank in MySQL","text":"<p>Legen Sie nun auf Basis des relationalen Datenbankschemas zur BSE GmbH &amp; Co. KG die Datenbank an. Dazu sollen Sie ein Script schreiben (in Visual Studio Code als .sql-Datei), welches dann in PhpMyAdmin importiert werden kann.</p> <p>F\u00fcgen Sie jeder Tabelle mindestens einen Test-Datensatz hinzu.</p>"},{"location":"kapitel_05.html#informationsmaterial-m52-befehle-in-mysql","title":"Informationsmaterial M|5.2: Befehle in MySQL","text":""},{"location":"kapitel_05.html#datenbanken-in-mysql-erstellen-loschen-wechseln-und-anzeigen","title":"Datenbanken in MySQL erstellen, l\u00f6schen, wechseln und anzeigen","text":"<p>Eine Datenbank erstellen:</p> <pre><code>CREATE DATABASE [IF NOT EXISTS] db_datenbankname;\n</code></pre> <p>Eine Datenbank l\u00f6schen:</p> <pre><code>DROP DATABASE [IF EXISTS] db_datenbankname;\n</code></pre> <p>Die Datenbank wechseln:</p> <pre><code>USE db_datenbankname;\n</code></pre> <p>Alle Datenbanken anzeigen:</p> <pre><code>SHOW DATABASES;\n</code></pre>"},{"location":"kapitel_05.html#erstellen-von-tabellen","title":"Erstellen von Tabellen","text":"<p>Allgemeine Syntax zum Erstellen von Tabellen:</p> <pre><code>CREATE TABLE tbl_tabellenname (\nDatenfeld1 Datentyp1 [default Standardwert1 | NULL | NOT NULL] [AUTO_INCREMENT],\nDatenfeld2 Datentyp2 [default Standardwert2 | NULL | NOT NULL] [AUTO_INCREMENT],\n\u2026\nDatenfeldX DatentypX [default StandardwertX | NULL | NOT NULL] [AUTO_INCREMENT],\nPRIMARY KEY (Datenfeldname),\nFOREIGN KEY (Datenfeldname) REFERENCES Tabelle(Datenfeldname)\n);\n</code></pre> <p>Die eckigen Klammern werden nicht mitgeschrieben, diese sollen nur die optionalen Werte kenntlich machen.</p> <p>Mit der Anweisung <code>CREATE TABLE</code> wird eine neue, leere Tabelle erstellt. Danach folgt der gew\u00fcnschte Tabellenname.</p> <p>In runden Klammern folgen die Definitionen der einzelnen Datenfelder. F\u00fcr jedes Datenfeld m\u00fcssen dabei ein Name und ein Datentyp (s. Informationsmaterial im Kurs) angegeben werden.</p> <p>Mit der Angabe <code>PRIMARY KEY</code> kann ein Datenfeld als Prim\u00e4rschl\u00fcssel festgelegt werden. Beispiel der Syntax: </p> <pre><code>CREATE TABLE tbl_mitarbeiter (\nmitarbeiterPK INT NOT NULL AUTO_INCREMENT,\nvorname VARCHAR(100),\nnachname VARCHAR(100),\nPRIMARY KEY (mitarbeiterPK)\n);\n</code></pre> <p>Erl\u00e4uterungen zu den Parametern, die bei der Definition der Datenfelder m\u00f6glich sind</p> Parameter Erl\u00e4uterung <code>NOT NULL</code> Mit diesem Parameter wird die Eingabe eines Wertes f\u00fcr das entsprechende Datenfeld erzwungen. Diese Eingabe ist f\u00fcr Schl\u00fcsselfelder unbedingt anzugeben. <code>NULL</code> Mit diesem Parameter wird festgelegt, dass das Datenfeld standardm\u00e4\u00dfig keinen Wert (auch nicht 0 oder die leere Zeichenkette) enth\u00e4lt. (Ausgesprochen: [n\u028cl] ) <code>DEFAULT [Standardwert]</code> Dieser Parameter definiert einen Standardwert f\u00fcr das Datenfeld. Erh\u00e4lt dieses Datenfeld bei der Eingabe der Daten keinen Wert, wird der Standardwert verwendet. Die eckigen Klammern werden nicht mitgeschrieben, diese sollen nur den variablen Wert kenntlich machen. <code>AUTO_INCREMENT</code> Der Wert dieses Datenfeldes wird automatisch beim Anlegen eines neuen Datensatzes aus dem Wert des Datenfeldes des vorherigen Datensatzes plus eins errechnet. Dieser Wert kann vom Benutzer nicht ge\u00e4ndert werden."},{"location":"kapitel_05.html#vorhandene-tabellen-anzeigen","title":"Vorhandene Tabellen anzeigen","text":"<pre><code>SHOW TABLES [FROM Datenbankname];\n</code></pre> <ul> <li>Die Anweisung <code>SHOW TABLES</code> zeigt eine Liste der vorhandenen Tabellen in der aktuell ge\u00f6ffneten Datenbank an.</li> <li>Mit Hilfe des Schl\u00fcsselwortes <code>FROM</code> kann eine andere Datenbank benannt werden.</li> </ul>"},{"location":"kapitel_05.html#tabellen-loschen","title":"Tabellen l\u00f6schen","text":"<pre><code>DROP TABLE Tabellenname;\n</code></pre> <p>Mit der Anweisung <code>DROP TABLE</code> wird die angegebene Tabelle mit allen enthaltenen Daten gel\u00f6scht.</p>"},{"location":"kapitel_05.html#daten-in-tabellen-einfugen","title":"Daten in Tabellen einf\u00fcgen","text":"<pre><code>INSERT INTO Tabellenname (Datenfeld1, Datenfeld2, \u2026, DatenfeldX) VALUES\n(Wert1.1, Wert1.2, \u2026, Wert1.X),\n(Wert2.1, Wert2.2, \u2026, Wert2.X),\n\u2026\n(WertY.1, WertY.2, \u2026, WertY.X);\n</code></pre> <ul> <li>Textinformationen, Datums- und Zeitwerte sind in Apostrophe (\u2018\u2026\u2018) oder Anf\u00fchrungszeichen (\u201c\u2026\u201c) einzuschlie\u00dfen.</li> <li>Im nachfolgenden Beispiel wird eine Tabelle Mitarbeiter erstellt und anschlie\u00dfend mit zwei Beispieldatens\u00e4tzen gef\u00fcllt:</li> </ul> <pre><code>CREATE TABLE tbl_mitarbeiter (\nmitarbeiterPK INT NOT NULL AUTO_INCREMENT,\nvorname VARCHAR(100),\nnachname VARCHAR(100),\nstrasse VARCHAR(100),\nplz CHAR(5),\nort VARCHAR(100),\ngebdat DATE,\nPRIMARY KEY(mitarbeiterPK)\n);\n</code></pre> <pre><code>INSERT INTO tbl_mitarbeiter (vorname, nachname, strasse, plz, ort, gebdat) VALUES\n(\"Rainer\", \"Zufall\", \"Dorfweg 6 \", \"01689\", \"Nullerhausen\", \"1978-01-05\"),\n(\"Anna\", \"Log\", \"Kirchplatz 21\", \"10850\", \"Berlin\", \"1985-06-17\");\n</code></pre>"},{"location":"kapitel_05.html#erste-abfrage-von-datensatzen","title":"Erste Abfrage von Datens\u00e4tzen","text":"<p>Beispiel:</p> <pre><code>SELECT * FROM tbl_mitarbeiter;\n</code></pre> <p>Ausgabe des Beispiels in phpMyAdmin:</p> <p></p>"},{"location":"kapitel_05.html#datensatze-aktualisieren","title":"Datens\u00e4tze aktualisieren","text":"<pre><code>UPDATE Tabellenname SET Datenfeld1 = Wert1, Datenfeld2 = Wert2, \u2026, DatenfeldX = WertX\n[WHERE Bedingung];\n</code></pre> <ul> <li>Mit der Hilfe der <code>WHERE</code>-Anweisung kann eine Bedingung eingegeben werden. Die Aktualisierung erfolgt dann nur bei den Datens\u00e4tzen, die diese Bedingung erf\u00fcllen. Wird keine Bedingung angegeben, erfolgt die Wertzuweisung bei allen Datens\u00e4tzen.</li> </ul> <p>Beispiel der Syntax:</p> <pre><code>UPDATE tbl_mitarbeiter SET nachname = \"Ernst\"\nWHERE nachname = \"Zufall\" AND vorname = \"Rainer\";\n</code></pre>"},{"location":"kapitel_05.html#daten-loschen","title":"Daten l\u00f6schen","text":"<pre><code>DELETE FROM Tabellenname\n[WHERE Bedingung];\n</code></pre> <ul> <li>Wenn keine <code>WHERE</code>-Bedingung angegeben wird, werden ohne Nachfrage alle Datens\u00e4tze gel\u00f6scht. Als Resultat verbleibt eine leere Tabelle!</li> </ul>"},{"location":"kapitel_05.html#arbeitsauftrag-a54-anzeigen-der-datenbank-uber-cli-bspw-fur-xampp-user","title":"Arbeitsauftrag A|5.4: Anzeigen der Datenbank \u00fcber CLI (bspw. f\u00fcr XAMPP-User)","text":"<p>Verschaffen Sie sich einen \u00dcberblick zu der Arbeit mit der CLI und den weiteren MySQL-Befehlen.</p>"},{"location":"kapitel_05.html#informationsmaterial-m53-arbeiten-auf-dem-datenbankserver-uber-die-konsole","title":"Informationsmaterial M|5.3: Arbeiten auf dem Datenbankserver \u00fcber die Konsole","text":"<p>Wie in der Einf\u00fchrung zu Datenbanken beschrieben, ist auch der MySQL-Server (bspw. \u00fcber XAMPP) mittels verschiedener Anwendungsprogramme erreichbar. In XAMPP ist (wenn mit installiert) phpMyAdmin, wie Sie bereits gesehen haben, eine einfache M\u00f6glichkeit, Datenbanken zu verwalten. Aber auch andere Programme erm\u00f6glichen die Arbeit in der Datenbank, so z.B. auch Adminer. Alle diese Programme haben etwas gemeinsam: Sie sollen das Arbeiten mit Datenbanken vereinfachen.</p> <p>Wenn Sie direkt auf dem Datenbankserver arbeiten wollen, k\u00f6nnen Sie dies aber auch direkt \u00fcber Command Line Interface (CLI) durchf\u00fchren. Dazu w\u00e4hlen Sie im XAMPP-Contol-Center die Schaltfl\u00e4che \"Shell\" aus.</p> <p></p> <p>Danach \u00f6ffnet sich ein weiteres Fenster mit folgenden Inhalt:</p> <p></p> <p>Nun m\u00fcsen Sie sich mit dem MySQL-Server verbinden. Der Befehl <code>mysql -u root</code> dient zur Anmeldung mit dem User \"root\".</p> <p></p> <p>Angemeldet sind Sie nun, jedoch steht \"none\" im Prompt noch daf\u00fcr, dass Sie keine Datenbank ausgew\u00e4hlt haben. Das m\u00fcssen Sie \u00fcber den Befehl USE datenbankname \u00e4ndern, um in einer Ihrer Datenbanken zu arbeiten:</p> <p></p>"},{"location":"kapitel_05.html#informationsmaterial-m54-weitere-befehle-in-mysql","title":"Informationsmaterial M|5.4: Weitere Befehle in MySQL","text":"<p>Wenn Sie \u00fcber CLI auf dem Server arbeiten, haben Sie keine grafischen Hilfsmittel f\u00fcr die Ansicht der Datenbank. Das bedeutet, dass Sie einige Informationen nur durch manuelle Suche erhalten. Auf der Datenbankebene benutzen Sie den Befehl SHOW um Informationen \u00fcber Datenbanken, Tabellen, Prozeduren und Funktionen zu erhalten. Um die Tabellenstruktur anzuzeigen benutzen Sie den Befehl <code>EXPLAIN</code>.</p> Befehl Aktion <code>SHOW DATABASES;</code> Listet die verf\u00fcgbaren Datenbanken auf. <code>SHOW TABLES;</code> Listet die verf\u00fcgbaren Tabellen auf. <code>EXPLAIN [tabellenname];</code> Ausgabe der Tabellenstruktur mit allen Spalten und Datentypen <p>In der BSE Datenbank sieht die Ausgabe der Tabellenanzeige wie folgt aus:</p> <pre><code>SHOW TABLES;\n</code></pre> <pre><code>+-------------------------+\n| Tables_in_db_bseverkauf |\n+-------------------------+\n| tbl_artikel             |\n| tbl_artikelgruppe       |\n| tbl_bundesland          |\n| tbl_kaeufer             |\n| tbl_plz                 |\n| tbl_rechnung            |\n| tbl_verkaeufer          |\n+-------------------------+\n</code></pre> <p>M\u00f6chte man mehr \u00fcber die Tabellenstruktur bzw. \u00fcber die verwendeten Datentypen wissen, hilft der EXPLAIN-Befehl:</p> <pre><code>EXPLAIN tbl_plz;\n</code></pre> <pre><code>+--------------+-------------+------+-----+---------+-------+\n| Field        | Type        | Null | Key | Default | Extra |\n+--------------+-------------+------+-----+---------+-------+\n| plzPK        | char(5)     | NO   | PRI | NULL    |       |\n| ort          | varchar(60) | YES  |     | NULL    |       |\n| bundeslandFK | char(2)     | YES  | MUL | NULL    |       |\n+--------------+-------------+------+-----+---------+-------+\n</code></pre>"},{"location":"kapitel_05.html#arbeitsauftrag-a55-datenbanksprache","title":"Arbeitsauftrag A|5.5: Datenbanksprache","text":"<p>In der Datenbanksprache SQL wird zwischen vier Arten von SQL-Kommandos unterschieden. Beschreiben Sie, was mit den folgenden Sprachteilen gemeint ist:</p> <ul> <li>DML-Kommandos (Data Manipulation Language)</li> <li>DDL-Kommandos (Data Definition Language)</li> <li>DCL-Kommandos (Data Control Language)</li> <li>DQL-Kommandos (Data Query Language)</li> </ul> <p>Nutzen Sie daf\u00fcr das Script SQL-Grundlagen aus dem Herdt All-You-Can-Read in Ihrem mm-bbs.de-Landingpage-Portal.</p> <p>Zus\u00e4tzliches Material, weitere \u00dcbungen &amp; Tipps</p> <p>Die folgenden \u00dcbungen und Tipps &amp; Tricks dienen Ihrer pers\u00f6nlichen Wiederholung und Vorbereitung auf Klassenarbeiten, Pr\u00fcfungen etc.Ich kann, weil ich will, was ich muss! (Immanuel Kant)</p>"},{"location":"kapitel_05.html#ubungen","title":"\u00dcbungen","text":""},{"location":"kapitel_05.html#ubung-ue50-relationales-datenbankschema-zur-db_universitaet-erstellen","title":"\u00dcbung UE|5.0: Relationales Datenbankschema zur db_universitaet erstellen","text":"<p>Erstellen Sie zum ERM und der Kurzschreibweise (s.u.) das relative Datenbankschema der db_universitaet.</p> <p></p>"},{"location":"kapitel_05.html#ubung-ue51-anlegen-der-db_universitaet-in-mysql","title":"\u00dcbung UE|5.1: Anlegen der db_universitaet in MySQL","text":"<p>Erstellen Sie ein in phpMyAdmin importierbares SQL-Script, welches die db_universitaet anlegt und f\u00fcr jede Tabelle zwei Datens\u00e4tze hinzuf\u00fcgt.</p>"},{"location":"kapitel_05.html#ubung-ue52-importieren-des-sql-scriptes-in-phpmyadmin","title":"\u00dcbung UE|5.2: Importieren des SQL-Scriptes in phpMyAdmin","text":"<p>\u00d6ffnen Sie phpMyAdmin (nach dem Start von XAMPP \u00fcber die Adresse localhost/phpmyadmin). W\u00e4hlen Sie den Reiter \"Importieren\" und anschlie\u00dfend Ihr SQL-Script (oder die L\u00f6sung s.u.) aus. Letztlich k\u00f6nnen alle Einstellungen der Import-Oberfl\u00e4che beibehalten und mit \"OK\" die Datenbank erstellt werden.</p> <p>Pr\u00fcfen Sie nach dem Import, ob Ihre Daten korrekt hochgeladen wurden.</p> <pre><code>CREATE DATABASE IF NOT EXISTS db_universitaet;\nUSE db_universitaet;\n\nCREATE TABLE tbl_student (\nstudentPK INT NOT NULL AUTO_INCREMENT,\nvorname VARCHAR(40),\nnachname VARCHAR(40),\nPRIMARY KEY (studentPK)\n);\n\nINSERT INTO tbl_student (vorname, nachname) VALUES\n(\"Rainer\", \"Zufall\"),\n(\"Robin\", \"Hutt\");\n\nCREATE TABLE tbl_besucht (\nbesuchtPK INT NOT NULL AUTO_INCREMENT,\nstudentFK INT,\nvorlesungFK INT,\nPRIMARY KEY (besuchtPK)\n);\n\nINSERT INTO tbl_besucht (studentFK, vorlesungFK) VALUES\n(\"1\", \"1\"),\n(\"2\", \"1\");\n\nCREATE TABLE tbl_vorlesung (\nvorlesungPK INT NOT NULL AUTO_INCREMENT,\nprofessorFK INT,\ntitel VARCHAR(90),\nstundenanzahl INT,\nPRIMARY KEY (vorlesungPK)\n);\n\nINSERT INTO tbl_vorlesung (professorFK, titel, stundenanzahl) VALUES\n(1, \"Einf\u00fchrung in die Quantenphysik\", 4),\n(2, \"Philosophie des Immanuel Kant\", 2);\n\nCREATE TABLE tbl_professor (\nprofessorPK INT NOT NULL AUTO_INCREMENT,\nvorname VARCHAR(40),\nnachname VARCHAR(40),\nPRIMARY KEY (professorPK)\n);\n\nINSERT INTO tbl_professor (vorname, nachname) VALUES\n(\"Andy\", \"Arbeit\"),\n(\"Theo\", \"Rist\");\n\nCREATE TABLE tbl_buch (\nbuchPK INT NOT NULL AUTO_INCREMENT,\ntitel VARCHAR(90),\nPRIMARY KEY (buchPK)\n);\n\nINSERT INTO tbl_buch (titel) VALUES\n(\"Quantenphysik f\u00fcr Dummies\"),\n(\"Kritik der reinen Vernunft\");\n\nCREATE TABLE tbl_benoetigt (\nbenoetigtPK INT NOT NULL AUTO_INCREMENT,\nvorlesungFK INT,\nbuchFK INT,\nPRIMARY KEY (benoetigtPK)\n);\n\nINSERT INTO tbl_benoetigt (vorlesungFK, buchFK) VALUES\n(1, 1),\n(2, 2);\n</code></pre>"},{"location":"kapitel_05.html#ubung-ue53-anlegen-von-datenbanken-fehlersuche","title":"\u00dcbung UE|5.3: Anlegen von Datenbanken - Fehlersuche","text":"<p>F\u00fchren Sie die Fehlersuche der kommenden Aufgaben nach folgendem Schema durch:</p> <ol> <li>Importieren Sie unter db-fiddle.com die SQL-Anweisungen.</li> <li>Starten Sie das Einlesen mit \"Run\".</li> <li>Beschreiben Sie die Art der angezeigten Fehlermeldung.</li> <li>F\u00fchren Sie die Korrektur durch.</li> <li>Starten Sie zur Kontrolle das Einlesen mit \"Run\".</li> </ol>"},{"location":"kapitel_05.html#aufgabe-1","title":"Aufgabe 1","text":"<pre><code>CREATE DATABASE db_ferienhausvermietung;\n\nCREATE TABLE tbl_ferienhaus (\nferienhausPK CHAR(2) NOT NULL AUTO_INCREMENT,\nzimmername VARCHAR(50),\nanzahl_raeume INT,\nsauna BOOLEAN,\nkaminofen BOOLEAN,\ntagespreis DECIMAL(12,2),\nPRIMARY KEY (ferienhausPK)\n);\n\nCREATE TABLE tbl_plz (\nplzPK CHAR(5) NOT NULL,\nort VARCHAR(100),\nPRIMARY KEY (plzPK)\n);\n\nCREATE TABLE tbl_kunde (\nkundePK INT NOT NULL AUTO_INCREMENT,\nvorname VARCHAR(50),\nnachname VARCHAR(50),\nanschrift VARCHAR(255),\nplzFK CHAR(5),\nPRIMARY KEY (kundePK),\nFOREIGN KEY (plzFK) REFERENCES tbl_plz(plzPK)\n);\n\nCREATE TABLE tbl_mietet (\nmietetPK INT NOT NULL AUTO_INCREMENT,\nferienhausFK INT,\nkundeFK INT,\nmietbeginn DATETIME,\nmietende DATETIME,\nPRIMARY KEY (mietetPK),\nFOREIGN KEY (ferienhausFK) REFERENCES tbl_ferienhaus(ferienhausPK),\nFOREIGN KEY (kundeFK) REFERENCES tbl_kunde(kundePK)\n);\n\nINSERT INTO tbl_ferienhaus (zimmername, anzahl_raeume, sauna, kaminofen, tagespreis) VALUES\n(\"Baltrum\", 3, 1, 0, 90.00),\n(\"Wangerooge\", 5, 1, 1, 92.50),\n(\"Langeoog\", 2, 0, 0, 80.00),\n(\"Spiekerooge\", 3, 0, 0, 180.00),\n(\"Amrum\", 4, 1, 1, 290.00);\n\nINSERT INTO tbl_plz (plzPK, ort) VALUES\n(\"99085\",\"Erfurt\"),\n(\"10119\",\"Berlin\"),\n(\"97097\",\"W\u00fcrzburg\"),\n(\"70180\",\"Stuttgart\");\n\nINSERT INTO tbl_kunde (vorname, nachname, anschrift, plzFK) VALUES\n(\"Tim\",\"M\u00e4lzer\",\"Harlandstr. 2\",\"99085\"),\n(\"Steffen\",\"Henssler\",\"Wogenweg 76\",\"10119\"),\n(\"Christian\",\"Rach\",\"Ellenweg 9\",\"97097\"),\n(\"Frank\",\"Rosin\",\"Meinardusallee 22\",\"97097\"),\n(\"Johann\",\"Lafer\",\"Feierstr. 65\",\"70180\");\n\nINSERT INTO tbl_mietet (ferienhausFK, kundeFK, mietbeginn, mietende) VALUES\n(1,5,\"2021-04-21\",\"2021-04-30\"),\n(2,4,\"2021-05-03\",\"2021-05-17\"),\n(3,3,\"2021-04-15\",\"2021-04-22\"),\n(4,2,\"2021-06-03\",\"2021-06-20\"),\n(5,1,\"2021-04-29\",\"2021-05-15\");\n</code></pre>"},{"location":"kapitel_05.html#aufgabe-2","title":"Aufgabe 2","text":"<pre><code>CREATE DATABASE db_ferienhausvermietung;\n\nCREATE TABLE tbl_ferienhaus (\nferienhausPK INT NOT NULL AUTO_INCREMENT,\nzimmername VARCHAR(50),\nanzahl_raeume INT,\nsauna BOOLEAN,\nkaminofen BOOLEAN,\ntagespreis DECIMAL(12,2),\nPRIMARY KEY (ferienhausPK)\n);\n\nCREATE TABLE tbl_plz (\nplzPK CHAR(5) NOT NULL,\nort VARCHAR(100),\nPRIMARY KEY (plzPK)\n);\n\nCREATE TABLE tbl_kunde (\nkundePK INT NOT NULL AUTO_INCREMENT,\nvorname VARCHAR(50),\nnachname VARCHAR(50),\nanschrift VARCHAR(255),\nplzFK CHAR(5),\nPRIMARY KEY (kundePK),\nFOREIGN KEY (plzFK) REFERENCES tbl_plz(plsPK)\n);\n\nCREATE TABLE tbl_mietet (\nmietetPK INT NOT NULL AUTO_INCREMENT,\nferienhausFK INT,\nkundeFK INT,\nmietbeginn DATETIME,\nmietende DATETIME,\nPRIMARY KEY (mietetPK),\nFOREIGN KEY (ferienhausFK) REFERENCES tbl_ferienhaus(ferienhausPK),\nFOREIGN KEY (kundeFK) REFERENCES tbl_kunde(kundePK)\n);\n\nINSERT INTO tbl_ferienhaus (zimmername, anzahl_raeume, sauna, kaminofen, tagespreis) VALUES\n(\"Baltrum\", 3, 1, 0, 90.00),\n(\"Wangerooge\", 5, 1, 1, 92.50),\n(\"Langeoog\", 2, 0, 0, 80.00),\n(\"Spiekerooge\", 3, 0, 0, 180.00),\n(\"Amrum\", 4, 1, 1, 290.00);\n\nINSERT INTO tbl_plz (plzPK, ort) VALUES\n(\"99085\",\"Erfurt\"),\n(\"10119\",\"Berlin\"),\n(\"97097\",\"W\u00fcrzburg\"),\n(\"70180\",\"Stuttgart\");\n\nINSERT INTO tbl_kunde (vorname, nachname, anschrift, plzFK) VALUES\n(\"Tim\",\"M\u00e4lzer\",\"Harlandstr. 2\",\"99085\"),\n(\"Steffen\",\"Henssler\",\"Wogenweg 76\",\"10119\"),\n(\"Christian\",\"Rach\",\"Ellenweg 9\",\"97097\"),\n(\"Frank\",\"Rosin\",\"Meinardusallee 22\",\"97097\"),\n(\"Johann\",\"Lafer\",\"Feierstr. 65\",\"70180\");\n\nINSERT INTO tbl_mietet (ferienhausFK, kundeFK, mietbeginn, mietende) VALUES\n(1,5,\"2021-04-21\",\"2021-04-30\"),\n(2,4,\"2021-05-03\",\"2021-05-17\"),\n(3,3,\"2021-04-15\",\"2021-04-22\"),\n(4,2,\"2021-06-03\",\"2021-06-20\"),\n(5,1,\"2021-04-29\",\"2021-05-15\");\n</code></pre>"},{"location":"kapitel_05.html#aufgabe-3","title":"Aufgabe 3","text":"<pre><code>CREATE DATABASE db_ferienhausvermietung;\n\nCREATE TABLE tbl_ferienhaus (\nferienhausPK INT NOT NULL AUTO_INCREMENT,\nzimmername VARCHAR(50),\nanzahl_raeume INT,\nsauna BOOLEAN,\nkaminofen BOOLEAN,\ntagespreis DECIMAL(12,2),\nPRIMARY KEY (ferienhausPK)\n);\n\nCREATE TABLE tbl_plz (\nplzPK CHAR(5) NOT NULL,\nort VARCHAR(100),\nPRIMARY KEY (plzPK)\n);\n\nCREATE TABLE tbl_kunde (\nkundePK INT NOT NULL AUTO_INCREMENT,\nvorname VARCHAR(50),\nnachname VARCHAR(50),\nanschrift VARCHAR(255),\nplzFK CHAR(5),\nPRIMARY KEY (kundePK),\nFOREIGN KEY (plzFK) REFERENCES tbl_plz(plzPK)\n);\n\nCREATE TABLE tbl_mietet (\nmietetPK INT NOT NULL AUTO_INCREMENT,\nferienhausFK INT,\nkundeFK INT,\nmietbeginn DATETIME,\nmietende DATETIME,\nPRIMARY KEY (mietetPK),\nFOREIGN KEY (ferienhausFK) REFERENCES tbl_ferienhaus(ferienhausPK),\nFOREIGN KEY (kundeFK) REFERENCES tbl_kunde(kundePK)\n);\n\nINSERT INTO tbl_ferienhaus (zimmername, anzahl_raeume, sauna, kaminofen, tagespreis) VALUES\n(\"Baltrum\", 3, 1, 0, 90.00),\n(\"Wangerooge\", 5, 1, 1, 92.50),\n(\"Langeoog\", 2, 0, 0, 80.00),\n(\"Spiekerooge\", 3, 0, 0, 180.00),\n(\"Amrum\", 4, 1, 1, 290.00);\n\nINSERT INTO tbl_plz (plzPK, ort) VALUES\n(\"99085\",\"Erfurt\"),\n(\"10119\",\"Berlin\"),\n(\"97097\",\"W\u00fcrzburg\"),\n(\"70180\",\"Stuttgart\");\n\nINSERT INTO tbl_kunde (vorname, nachname, anschrift, plzFK) VALUES\n(\"Tim\",\"M\u00e4lzer\",\"Harlandstr. 2\",\"99085\"),\n(\"Steffen\",\"Henssler\",\"Wogenweg 76\",\"10119\"),\n(\"Christian\",\"Rach\",\"Ellenweg 9\",\"97097\"),\n(\"Frank\",\"Rosin\",\"Meinardusallee 22\",\"97097\"),\n(\"Johann\",\"Lafer\",\"Feierstr. 65\",\"70180\");\n\nINSERT INTO tbl_mietet (ferienhausFK, kundeFK, mietbeginn, mietende) VALUES\n(1,5,\"2021-04-21\",\"2021-04-30\"),\n(2,4,\"2021-05-03\",\"2021-05-17\"),\n(3,3,\"2021-04-15\",\"2021-04-22\"),\n(4,2,\"2021-06-03\",\"2021-06-20\"),\n(6,1,\"2021-04-29\",\"2021-05-15\");\n</code></pre>"},{"location":"kapitel_05.html#aufgabe-4","title":"Aufgabe 4","text":"<pre><code>CREATE DATABASE db_ferienhausvermietung;\n\nCREATE TABLE tbl_ferienhaus (\nferienhausPK INT NOT NULL AUTO_INCREMENT,\nzimmername VARCHAR(50),\nanzahl_raeume INT,\nsauna BOOLEAN,\nkaminofen BOOLEAN,\ntagespreis DECIMAL(12,2),\nPRIMARY KEY (ferienhausPK)\n);\n\nCREATE TABLE tbl_plz (\nplzPK CHAR(5) NOT NULL,\nort VARCHAR(100),\nPRIMARY KEY (plzPK)\n);\n\nCREATE TABLE tbl_kunde (\nkundePK INT NOT NULL AUTO_INCREMENT,\nvorname VARCHAR(50),\nnachname VARCHAR(50),\nanschrift VARCHAR(255),\nplzFK CHAR(5),\nPRIMARY KEY (kundePK),\nFOREIGN KEY (plzFK) REFERENCES tbl_plz(plzPK)\n);\n\nCREATE TABLE tbl_mietet (\nmietetPK INT NOT NULL AUTO_INCREMENT,\nferienhausFK INT,\nkundeFK INT,\nmietbeginn DATETIME,\nmietende DATETIME,\nPRIMARY KEY (mietetPK),\nFOREIGN KEY (ferienhausFK) REFERENCES tbl_ferienhaus(ferienhausPK),\nFOREIGN KEY (kundeFK) REFERENCES tbl_kunde(kundePK)\n);\n\nINSERT INTO tbl_ferienhaus (zimmername, anzahl_raeume, sauna, tagespreis) VALUES\n(\"Baltrum\", 3, 1, 0, 90.00),\n(\"Wangerooge\", 5, 1, 1, 92.50),\n(\"Langeoog\", 2, 0, 0, 80.00),\n(\"Spiekerooge\", 3, 0, 0, 180.00),\n(\"Amrum\", 4, 1, 1, 290.00);\n\nINSERT INTO tbl_plz (plzPK, ort) VALUES\n(\"99085\",\"Erfurt\"),\n(\"10119\",\"Berlin\"),\n(\"97097\",\"W\u00fcrzburg\"),\n(\"70180\",\"Stuttgart\");\n\nINSERT INTO tbl_kunde (vorname, nachname, anschrift, plzFK) VALUES\n(\"Tim\",\"M\u00e4lzer\",\"Harlandstr. 2\",\"99085\"),\n(\"Steffen\",\"Henssler\",\"Wogenweg 76\",\"10119\"),\n(\"Christian\",\"Rach\",\"Ellenweg 9\",\"97097\"),\n(\"Frank\",\"Rosin\",\"Meinardusallee 22\",\"97097\"),\n(\"Johann\",\"Lafer\",\"Feierstr. 65\",\"70180\");\n\nINSERT INTO tbl_mietet (ferienhausFK, kundeFK, mietbeginn, mietende) VALUES\n(1,5,\"2021-04-21\",\"2021-04-30\"),\n(2,4,\"2021-05-03\",\"2021-05-17\"),\n(3,3,\"2021-04-15\",\"2021-04-22\"),\n(4,2,\"2021-06-03\",\"2021-06-20\"),\n(5,1,\"2021-04-29\",\"2021-05-15\");\n</code></pre>"},{"location":"kapitel_05.html#aufgabe-5","title":"Aufgabe 5","text":"<pre><code>CREATE DATABASE db_ferienhausvermietung;\n\nCREATE TABLE tbl_ferienhaus (\nferienhausPK INT NOT NULL AUTO_INCREMENT,\nzimmername VARCHAR(50),\nanzahl_raeume INT,\nsauna BOOLEAN,\nkaminofen BOOLEAN,\ntagespreis DECIMAL(12,2),\nPRIMARY KEY (ferienhausPK)\n);\n\nCREATE TABLE tbl_plz (\nplzPK CHAR(5) NOT NULL,\nort VARCHAR(100),\nPRIMARY KEY (plzPK)\n);\n\nCREATE TABLE tbl_kunde (\nkundePK INT NOT NULL AUTO_INCREMENT,\nvorname VARCHAR(50),\nnachname VARCHAR(50),\nanschrift VARCHAR(255),\nplzFK CHAR(5),\nPRIMARY KEY (kundePK),\nFOREIGN KEY (plzFK) REFERENCES tbl_plz(plzPK)\n);\n\nCREATE TABLE tbl_mietet (\nmietetPK INT NOT NULL AUTO_INCREMENT,\nferienhausFK INT,\nkundeFK INT,\nmietbeginn DATETIME,\nmietende DATETIME,\nPRIMARY KEY (mietetPK),\nFOREIGN KEY (ferienhausFK) REFERENCES tbl_ferienhaus(ferienhausPK),\nFOREIGN KEY (kundeFK) REFERENCES tbl_kunde(kundePK)\n);\n\nINSERT INTO tbl_ferienhaus (zimmername, anzahl_raeume, sauna, kaminofen, tagespreis) VALUES\n(\"Baltrum\", 3, 1, 0, 90.00),\n(\"Wangerooge\", 5, 1, 1, 92.50),\n(\"Langeoog\", 2, 0, 0, 80.00),\n(\"Spiekerooge\", 3, 0, 0, 180.00),\n(\"Amrum\", 4, 1, 1, 290.00);\n\nINSERT INTO tbl_kunde (vorname, nachname, anschrift, plzFK) VALUES\n(\"Tim\",\"M\u00e4lzer\",\"Harlandstr. 2\",\"99085\"),\n(\"Steffen\",\"Henssler\",\"Wogenweg 76\",\"10119\"),\n(\"Christian\",\"Rach\",\"Ellenweg 9\",\"97097\"),\n(\"Frank\",\"Rosin\",\"Meinardusallee 22\",\"97097\"),\n(\"Johann\",\"Lafer\",\"Feierstr. 65\",\"70180\");\n\nINSERT INTO tbl_mietet (ferienhausFK, kundeFK, mietbeginn, mietende) VALUES\n(1,5,\"2021-04-21\",\"2021-04-30\"),\n(2,4,\"2021-05-03\",\"2021-05-17\"),\n(3,3,\"2021-04-15\",\"2021-04-22\"),\n(4,2,\"2021-06-03\",\"2021-06-20\"),\n(5,1,\"2021-04-29\",\"2021-05-15\");\n\nINSERT INTO tbl_plz (plzPK, ort) VALUES\n(\"99085\",\"Erfurt\"),\n(\"10119\",\"Berlin\"),\n(\"97097\",\"W\u00fcrzburg\"),\n(\"70180\",\"Stuttgart\");\n</code></pre>"},{"location":"kapitel_05.html#aufgabe-6","title":"Aufgabe 6","text":"<pre><code>CREATE DATABASE db_ferienhausvermietung;\n\nCREATE TABLE tbl_ferienhaus (\nferienhausPK INT NOT NULL AUTO_INCREMENT,\nzimmername VARCHAR(50),\nanzahl_raeume INT,\nsauna BOOLEAN,\nkaminofen BOOLEAN,\ntagespreis DECIMAL(12,2),\nPRIMARY KEY (ferienhausPK)\n);\n\nCREATE TABLE tbl_plz (\nplzPK CHAR(5) NOT NULL,\nort VARCHAR(100),\nPRIMARY KEY (plzPK)\n);\n\nCREATE TABLE tbl_kunde (\nkundePK INT NOT NULL AUTO_INCREMENT,\nvorname VARCHAR(50),\nnachname VARCHAR(50),\nanschrift VARCHAR(255),\nplzFK CHAR(5),\nPRIMARY KEY (kundePK),\nFOREIGN KEY (plzFK) REFERENCES tbl_plz(plzPK)\n);\n\nCREATE TABLE tbl_mietet (\nmietetPK INT NOT NULL AUTO_INCREMENT,\nferienhausFK INT,\nkundeFK INT,\nmietbeginn DATETIME,\nmietende INT,\nPRIMARY KEY (mietetPK),\nFOREIGN KEY (ferienhausFK) REFERENCES tbl_ferienhaus(ferienhausPK),\nFOREIGN KEY (kundeFK) REFERENCES tbl_kunde(kundePK)\n);\n\nINSERT INTO tbl_ferienhaus (zimmername, anzahl_raeume, sauna, kaminofen, tagespreis) VALUES\n(\"Baltrum\", 3, 1, 0, 90.00),\n(\"Wangerooge\", 5, 1, 1, 92.50),\n(\"Langeoog\", 2, 0, 0, 80.00),\n(\"Spiekerooge\", 3, 0, 0, 180.00),\n(\"Amrum\", 4, 1, 1, 290.00);\n\nINSERT INTO tbl_plz (plzPK, ort) VALUES\n(\"99085\",\"Erfurt\"),\n(\"10119\",\"Berlin\"),\n(\"97097\",\"W\u00fcrzburg\"),\n(\"70180\",\"Stuttgart\");\n\nINSERT INTO tbl_kunde (vorname, nachname, anschrift, plzFK) VALUES\n(\"Tim\",\"M\u00e4lzer\",\"Harlandstr. 2\",\"99085\"),\n(\"Steffen\",\"Henssler\",\"Wogenweg 76\",\"10119\"),\n(\"Christian\",\"Rach\",\"Ellenweg 9\",\"97097\"),\n(\"Frank\",\"Rosin\",\"Meinardusallee 22\",\"97097\"),\n(\"Johann\",\"Lafer\",\"Feierstr. 65\",\"70180\");\n\nINSERT INTO tbl_mietet (ferienhausFK, kundeFK, mietbeginn, mietende) VALUES\n(1,5,\"2021-04-21\",\"2021-04-30\"),\n(2,4,\"2021-05-03\",\"2021-05-17\"),\n(3,3,\"2021-04-15\",\"2021-04-22\"),\n(4,2,\"2021-06-03\",\"2021-06-20\"),\n(5,1,\"2021-04-29\",\"2021-05-15\");\n</code></pre>"},{"location":"kapitel_05.html#aufgabe-7","title":"Aufgabe 7","text":"<pre><code>CREATE DATABASE db_ferienhausvermietung;\n\nCREATE TABLE tbl_ferienhaus (\nferienhausPK INT NOT NULL AUTO_INCREMENT,\nzimmername VARCHAR(50),\nanzahl_raeume INT,\nsauna BOOLEAN,\nkaminofen BOOLEAN,\ntagespreis DECIMAL(12,2),\nPRIMARY KEY (ferienhausPK)\n);\n\nCREATE TABLE tbl_plz (\nplzPK CHAR(5) NOT NULL,\nort VARCHAR(100),\nPRIMARY KEY (plzPK)\n);\n\nCREATE TABLE tbl_kunde (\nkundePK INT NOT NULL AUTO_INCREMENT,\nvorname VARCHAR(50),\nnachname VARCHAR(50),\nanschrift VARCHAR(255),\nplzFK CHAR(5),\nPRIMARY KEY (kundePK),\nFOREIGN KEY (plzFK) REFERENCES tbl_plz(plzPK)\n);\n\nCREATE TABLE tbl_mietet (\nmietetPK INT NOT NULL AUTO_INCREMENT,\nferienhausFK INT,\nkundeFK INT,\nmietbeginn DATETIME,\nmietende DATETIME,\nPRIMARY KEY (mietetPK),\nFOREIGN KEY (ferienhausFK) REFERENCES tbl_ferienhaus(ferienhausPK),\nFOREIGN KEY (kundeFK) REFERENCES tbl_kunde(kundePK)\n);\n\nINSERT INTO tbl_ferienhaus (zimmername, anzahl_raeume, sauna, kaminofen, tagespreis) VALUES\n(\"Baltrum\", 3, 1, 0, 90.00),\n(\"Wangerooge\", 5, 1, 1, 92.50),\n(\"Langeoog\", 2, 0, 0, 80.00),\n(\"Spiekerooge\", 3, 0, 0, 180.00),\n(\"Amrum\", 4, 1, 1, 290.00);\n\nINSERT INTO tbl_plz (plzPK, ort) VALUES\n(\"99085\",\"Erfurt\"),\n(\"10119\",\"Berlin\"),\n(\"97097\",\"W\u00fcrzburg\"),\n(\"70180\",\"Stuttgart\");\n\nINSERT INTO tbl_kunde (vorname, nachname, anschrift, plzFK) VALUES\n(\"Tim\",\"M\u00e4lzer\",\"Harlandstr. 2\",\"99085\"),\n(\"Steffen\",\"Henssler\",\"Wogenweg 76\",\"10118\"),\n(\"Christian\",\"Rach\",\"Ellenweg 9\",\"97097\"),\n(\"Frank\",\"Rosin\",\"Meinardusallee 22\",\"97097\"),\n(\"Johann\",\"Lafer\",\"Feierstr. 65\",\"70180\");\n\nINSERT INTO tbl_mietet (ferienhausFK, kundeFK, mietbeginn, mietende) VALUES\n(1,5,\"2021-04-21\",\"2021-04-30\"),\n(2,4,\"2021-05-03\",\"2021-05-17\"),\n(3,3,\"2021-04-15\",\"2021-04-22\"),\n(4,2,\"2021-06-03\",\"2021-06-20\"),\n(5,1,\"2021-04-29\",\"2021-05-15\");\n</code></pre>"},{"location":"kapitel_05.html#aufgabe-8","title":"Aufgabe 8","text":"<pre><code>CREATE DATABASE db_ferienhausvermietung;\n\nCREATE TABLE tbl_ferienhaus (\nferienhausPK INT NOT NULL AUTO_INCREMENT,\nzimmername VARCHAR(50),\nanzahl_raeume INT,\nsauna BOOLEAN,\nkaminofen BOOLEAN,\ntagespreis DECIMAL(12,2),\nPRIMARY KEY (ferienhausPK)\n);\n\nCREATE TABLE tbl_plz (\nplzPK CHAR(5) NOT NULL,\nort VARCHAR(100),\nPRIMARY KEY (plzPK)\n);\n\nCREATE TABLE tbl_kunde (\nkundePK INT NOT NULL AUTO_INCREMENT,\nvorname VARCHAR(50),\nnachname VARCHAR(50),\nanschrift VARCHAR(255),\nplzFK CHAR(5),\nPRIMARY KEY (kundePK),\nFOREIGN KEY (plzFK) REFERENCES tbl_plz(plzPK)\n);\n\nCREATE TABLE tbl_mietet (\nmietetPK INT NOT NULL AUTO_INCREMENT,\nferienhausFK INT,\nkundeFK INT,\nmietbeginn DATETIME,\nmietende DATETIME,\nPRIMARY KEY (mietetPK),\nFOREIGN KEY (ferienhausFK) REFERENCES tbl_ferienhaus(ferienhausPK),\nFOREIGN KEY (kundeFK) REFERENCES tbl_kunde(kundePK)\n);\n\nINSERT INTO tbl_ferienhaus (zimmername, anzahl_raeume, sauna, kaminofen, tagespreis) VALUES\n(\"Baltrum\", 3, 1, 0, 90.00),\n(\"Wangerooge\", 5, 1, 1, 92.50),\n(\"Langeoog\", 2, 0, 0, 80.00),\n(\"Spiekerooge\", 3, 0, 0, 180.00),\n(\"Amrum\", 4, 1, 1, 290.00);\n\nINSERT INTO tbl_plz (plzPK, ort) VALUES\n(\"99085\",\"Erfurt\"),\n(\"10119\",\"Berlin\"),\n(\"97097\",\"W\u00fcrzburg\"),\n(\"70180\",\"Stuttgart\");\n\nINSERT INTO tbl_kunde (vorname, nachname, anschrift, plzFK) VALUES\n(\"Tim\",\"M\u00e4lzer\",\"Harlandstr. 2\",\"99085\"),\n(\"Steffen\",\"Henssler\",\"Wogenweg 76\",\"10119\"),\n(\"Christian\",\"Rach\",\"Ellenweg 9\",\"97097\"),\n(\"Frank\",\"Rosin\",\"Meinardusallee 22\",\"97097\"),\n(\"Johann\",\"Lafer\",\"Feierstr. 65\",\"70180\");\n\nINSERT INTO tbl_mietet (ferienhausFK, kundeFK, mietbeginn, mietende, plzPK) VALUES\n(1,5,\"2021-04-21\",\"2021-04-30\"),\n(2,4,\"2021-05-03\",\"2021-05-17\"),\n(3,3,\"2021-04-15\",\"2021-04-22\"),\n(4,2,\"2021-06-03\",\"2021-06-20\"),\n(5,1,\"2021-04-29\",\"2021-05-15\");\n</code></pre> <p>Lizenz</p> <p>Der PV-DB-Kurs von  Oliver Schwenke &amp; Andr\u00e9 Neumann ist lizenziert unter einer Creative Commons Namensnennung - Nicht-kommerziell - Weitergabe unter gleichen Bedingungen 4.0 International Lizenz. Fragen, Hinweise etc. an neumann@mmbbs.de.</p>"},{"location":"kapitel_06.html","title":"Kapitel 06 - MySQL - Einfache Datenabfragen mit SELECT","text":""},{"location":"kapitel_06.html#kapitel-6-mysql-einfache-datenabfragen-mit-select","title":"Kapitel 6: MySQL - Einfache Datenabfragen mit SELECT","text":"<p>In diesem Kapitel ...</p> <ul> <li>... f\u00fchren Sie erste Abfragen mit der Datenbanksprache MySQL durch.</li> </ul> <p>Webversionen der Datenbanken</p> <p>\u00dcber die Links stehen Ihnen die Datenbanken zur Verf\u00fcgung:</p> <ul> <li>db_bseverkauf</li> <li>db_universitaet</li> </ul>"},{"location":"kapitel_06.html#kompetenz-60-einfache-datenbankabfragen-mit-select-durchfuhren","title":"Kompetenz 6.0: Einfache Datenbankabfragen mit SELECT durchf\u00fchren","text":"<p>Die Mitarbeiter der BSE GmbH &amp; Co. KG haben des \u00d6fteren Fragen an Matthias Thale, die er mithilfe seiner bisher eingesetzten Tabellenkalkulation kl\u00e4ren konnte. Jetzt nachdem die Datenbank eingerichtet wurde und die ersten Datens\u00e4tze einer vergangenen Abrechnungsperiode zum Testen erfasst sind, kann die Datenbank getestet werden.</p> <p>Thilo Ostiem hat eine Liste an Fragen erhalten, die Kolleginnen und Kollegen in der Vergangenheit hinsichtlich der Verkaufsplattform hatten. Nun soll er beweisen, dass die Datenbank schnell die gew\u00fcnschten Informationen liefern kann. So will z.B. der Datenschutzbeauftragte wissen, welche Attribute f\u00fcr die K\u00e4ufer gespeichert werden.</p>"},{"location":"kapitel_06.html#arbeitsauftrag-a60-einfache-datenabfragen-mit-select","title":"Arbeitsauftrag A|6.0: Einfache Datenabfragen mit SELECT","text":"<ol> <li>Lassen Sie sich alle K\u00e4ufer mit allen Attributen anzeigen.</li> <li>Welche Bundeslandabk\u00fcrzungen gibt es und was bedeuten diese?</li> <li>Lassen Sie sich eine Liste aller in der Datenbank befindlichen Postleitzahlen (aus der Postleitzahlen-Tabelle) mit deren Orten anzeigen. Die Zuordnung der Bundesl\u00e4nder soll dabei nicht ausgegeben werden.</li> <li>Lassen Sie sich alle Verk\u00e4ufer mit dem Nachnamen \"Becker\" anzeigen.</li> </ol> Beispiell\u00f6sung zu 1. <pre><code>-- Befehl\nSELECT *\nFROM tbl_kaeufer;\n\n-- Ausgabe\n+-----------+---------------+-----------------+------------------------------+-------+------------+----------------------------------------------------------+\n| kaeuferPK | nachname      | vorname         | anschrift                    | plzFK | geburtstag | firma                                                    |\n+-----------+---------------+-----------------+------------------------------+-------+------------+----------------------------------------------------------+\n|         1 | Lauterbach    | Heiner          | Am Dorfkrug                  | 80331 | 1952-04-10 | Mobiler Fr\u00fchst\u00fccksservice                                |\n|         2 | Purcell       | Dominic         | Eisenbahnweg 19              | 24105 | 1970-02-17 | Erlebe was! Reise-und Eventagentur                       |\n|         3 | Gordon-Levitt | Joseph          | Kloster-Thedinga-Str. 83     | 19053 | 1981-02-17 | Carl Wilh. Meyer GmbH &amp; Co. KG                           |\n|         4 | Carlson       | Kelly           | An der Emsbr\u00fccke 3           | 80331 | 1976-02-17 | DEKRA Akademie GmbH                                      |\n|         5 | Tatum         | Channing        | Burfehner Weg 50             | 66126 | 1980-04-26 | August Herzog Maschinenfabrik GmbH &amp; Co. KG              |\n|         6 | Aniston       | Jennifer        | Reimersstr. 18               | 89075 | 1969-02-11 | Buddelei-Mode GmbH &amp; Co. KG                              |\n|         7 | Hardy         | Tom             | Niedersachsenring 6          | 65183 | 1977-09-15 | HorFerVit Pharma GmbH                                    |\n|         8 | Pratt         | Chris           | Von-Jhering-Str. 9           | 26121 | 1979-06-21 | AT Anlagentechnik GmbH                                   |\n|         9 | Pitt          | Brad            | Okko-ten-Broek-Str. 2        | 18059 | 1963-12-18 | Beas-B\u00fcroservice                                         |\n|        10 | Hunnam        | Charlie         | Tiergartenstr. 126 B         | 12524 | 1980-04-10 | Wohnwagen Feldhus GmbH                                   |\n|        11 | Tarantino     | Quentin         | V\u00f6lgerstr. 15                | 50968 | 1963-03-27 | Bertram Zeitarbeit GmbH                                  |\n|        12 | Kruger        | Diane           | Fischerstr. 17               | 80331 | 1976-07-15 | August Cassens GmbH &amp; Co. KG                             |\n|        13 | Roth          | Eli             | Stockmannstr. 7              | 30559 | 1972-04-18 | cycle union GmbH                                         |\n|        14 | Cumberbatch   | Benedict        | Fenskestr. 42                | 55128 | 1976-09-19 | Tramann + Sohn GmbH &amp; Co.                                |\n|        15 | DiCaprio      | Leonardo        | Podbielskistr. 45            | 26121 | 1974-11-11 | TU Unternehmensberatung GmbH                             |\n|        16 | Reeves        | Keanu           | Wohlenbergstr. 26            | 18059 | 1964-09-02 | Allmess GmbH                                             |\n|        17 | Depp          | Johnny          | Widemannstr. 20              | 65183 | 1963-07-09 | Heinrich Hecker GmbH &amp; Co. KG                            |\n|        18 | Fishburne     | Laurence        | Wettinerweg 2 E              | 21129 | 1961-07-30 | mdp GmbH                                                 |\n|        19 | Moss          | Carrie-Anne     | Senefelderweg 15             | 65183 | 1967-08-21 | Max Hering KG                                            |\n|        20 | Smith         | Will            | F\u00fcrstenwalder Str. 4         | 50968 | 1968-09-25 | Friedrich Ahlers GmbH                                    |\n|        21 | Spader        | James           | Melanchthonstr. 36           | 01099 | 1960-02-07 | Autopflegeservice Berthmann                              |\n|        22 | Mara          | Kate            | L\u00fcchower Str. 2              | 07554 | 1983-02-27 | McFit GmbH Oldenburg                                     |\n|        23 | Hiddleston    | Tom             | Gr\u00fcnewaldstr. 27             | 80331 | 1981-02-09 | Fotocenter Zarate                                        |\n|        24 | Cavill        | Henry           | Gabelsbergerstr. 11          | 19053 | 1983-05-05 | Wintermann Druckhaus GmbH                                |\n|        25 | Evans         | Chris           | Tischbeinstr. 15             | 23568 | 1981-06-13 | AXIOS 3D Services GmbH                                   |\n|        26 | Odenkirk      | Bob             | Willf\u00fchrstr. 3               | 90427 | 1962-10-22 | B &amp; W Fashion GmbH &amp; Co. KG                              |\n|        27 | Cruise        | Tom             | Striehlstr. 11               | 70599 | 1962-07-03 | B. Carstens Textil GmbH                                  |\n|        28 | Moore         | Julianne        | Hinter der Alten Burg 25     | 40213 | 1960-12-03 | BA Business Advice GmbH                                  |\n|        29 | Gyllenhaal    | Jake            | Steinmetzstr. 21             | 40213 | 1980-12-19 | BAB Automationstechnik GmbH                              |\n|        30 | McConaughey   | Matthew         | Zieglerhof 6                 | 99090 | 1969-11-04 | badgestalten. GmbH                                       |\n|        31 | Evans         | Luke            | Hildesheimer Str. 360        | 01099 | 1979-04-15 | Bahlmann Bau GmbH                                        |\n|        32 | Cohan         | Lauren          | Hartenbrakenstr. 19 C        | 26121 | 1982-01-07 | Balance-Mediation                                        |\n|        33 | Thurman       | Uma             | Dieterichsstr. 14            | 90427 | 1970-04-29 | NULL                                                     |\n|        34 | Wilde         | Olivia          | Stockmannstr. 4              | 21129 | 1984-03-10 | NULL                                                     |\n|        35 | Woll          | Deborah Ann     | Uhlandstr. 6                 | 23568 | 1985-02-07 | NULL                                                     |\n|        36 | Cranston      | Bryan           | Hanomagstr. 2                | 19053 | 1956-03-07 | NULL                                                     |\n|        37 | Paul          | Aaron           | Podbielskistr. 45            | 23568 | 1979-08-27 | NULL                                                     |\n|        38 | Gunn          | Anna            | Am Marstall 23               | 66126 | 1968-08-11 | NULL                                                     |\n|        39 | Willis        | Bruce           | Mozartstr. 5                 | 99090 | 1955-03-19 | NULL                                                     |\n|        40 | Rohde         | Armin           | Alabasterweg 14              | 55128 | 1955-04-04 | NULL                                                     |\n|        41 | George        | G\u00f6tz            | Allerweg 29                  | 24105 | 1938-07-23 | NULL                                                     |\n|        42 | Vogel         | J\u00fcrgen          | Kriegerstr. 24               | 23568 | 1968-04-29 | NULL                                                     |\n|        43 | Fuchsberger   | Joachim         | Ritter-Br\u00fcning-Str. 36       | 86159 | 1927-03-11 | NULL                                                     |\n|        44 | John          | Gottfried       | Weberstr. 5                  | 80331 | 1942-08-29 | NULL                                                     |\n|        45 | James         | Kevin           | Alte D\u00f6hrener Str. 19        | 07554 | 1965-04-26 | NULL                                                     |\n|        46 | Jaenicke      | Hannes          | Albert-Niemann-Str. 5        | 24105 | 1960-02-26 | NULL                                                     |\n|        47 | Jackman       | Hugh            | Greitheweg 23 A              | 26121 | 1968-10-12 | NULL                                                     |\n|        48 | Jauch         | G\u00fcnther         | In der Steinbreite 86        | 99090 | 1956-07-13 | NULL                                                     |\n|        49 | Johnson       | Dwayne          | Salzhemmendorfer Str. 3      | 26121 | 1972-05-02 | NULL                                                     |\n|        50 | Kalkofe       | Oliver          | Thaerstr. 19                 | 23970 | 1965-09-12 | NULL                                                     |\n|        51 | Kamps         | G\u00fclcan          | Skagenhof 13                 | 70599 | 1982-09-20 | NULL                                                     |\n|        52 | Karrenbauer   | Katy            | Seilerstr. 6                 | 50968 | 1962-12-31 | NULL                                                     |\n|        53 | Keaton        | Diane           | Am Herrenh\u00e4user Bahnhof 8    | 99090 | 1946-01-05 | NULL                                                     |\n|        54 | Jolie         | Angelina        | Erichstr. 4                  | 80331 | 1975-06-04 | NULL                                                     |\n|        55 | Kerner        | Johannes B.     | Wilhelmstr. 8                | 23568 | 1964-12-09 | NULL                                                     |\n|        56 | Kerkeling     | Hape            | Papenstieg 17                | 14482 | 1964-12-09 | NULL                                                     |\n|        57 | Kidman        | Nicole          | Greitheweg 16                | 01099 | 1967-12-25 | NULL                                                     |\n|        58 | Kingsley      | Ben             | Koldinger Str. 19            | 50968 | 1943-12-31 | NULL                                                     |\n|        59 | Kier          | Udo             | Voltastr. 5                  | 21129 | 1944-10-14 | NULL                                                     |\n|        60 | Kline         | Kevin           | Wilksheide 74                | 66126 | 1947-10-24 | NULL                                                     |\n|        61 | MacLachlan    | Kyle            | Merianweg 39                 | 90427 | 1959-02-22 | NULL                                                     |\n|        62 | Lynch         | David           | Waldstr. 65 A                | 04319 | 1946-01-20 | NULL                                                     |\n|        63 | Norris        | Chuck           | Im Kleinen Bruche 21         | 23970 | 1940-03-10 | NULL                                                     |\n|        64 | Nolte         | Nick            | Perelsweg 10                 | 24105 | 1941-02-08 | NULL                                                     |\n|        65 | Nuhr          | Dieter          | Gradestr. 7                  | 55128 | 1960-10-29 | NULL                                                     |\n|        66 | Ohrt          | Christoph M.    | Ricklinger Stadtweg 10       | 80331 | 1960-03-30 | NULL                                                     |\n|        67 | Ochsenknecht  | Uwe             | Gradestr. 7                  | 55128 | 1956-01-07 | NULL                                                     |\n|        68 | Nimoy         | Leonard         | Blumenauer Str. 31           | 26121 | 1931-03-26 | NULL                                                     |\n|        69 | Olm           | Hans Werner     | Tulpenstr. 6                 | 89075 | 1955-02-01 | NULL                                                     |\n|        70 | Pacino        | Al              | Andersenstr. 11              | 40213 | 1940-04-25 | NULL                                                     |\n|        71 | Paltrow       | Gwyneth         | H\u00e4nselriede 11               | 39106 | 1972-09-28 | NULL                                                     |\n|        72 | Parker        | Sarah Jessica   | Uslarplatz 2                 | 99090 | 1965-03-25 | NULL                                                     |\n|        73 | Penn          | Sean            | Berliner Allee 68            | 26121 | 1960-08-17 | NULL                                                     |\n|        74 | Pastewka      | Bastian         | Badenstedter Str. 200        | 55128 | 1972-04-04 | NULL                                                     |\n|        75 | Russell       | Kurt            | Louise-Schroeder-Str. 3      | 40213 | 1951-03-17 | NULL                                                     |\n|        76 | Ryan          | Meg             | Schneiderberg 25             | 23970 | 1961-11-19 | NULL                                                     |\n|        77 | Rourke        | Mickey          | Ihmeplatz 8                  | 70599 | 1952-09-16 | NULL                                                     |\n|        78 | Sandler       | Adam            | Lutherstr. 26                | 12524 | 1966-09-09 | NULL                                                     |\n|        79 | Schmidt       | Harald          | Auwiese 15                   | 99090 | 1957-08-18 | NULL                                                     |\n|        80 | Sander        | Erol            | Tresckowstr. 16              | 01099 | 1968-11-09 | NULL                                                     |\n|        81 | Salzgeber     | Rainer M.       | Salfeldstr. 1                | 23970 | 1969-08-15 | NULL                                                     |\n|        82 | Sutherland    | Donald          | Leinaustr. 12                | 04319 | 1935-07-17 | NULL                                                     |\n|        83 | Sutherland    | Kiefer          | Lohkamp 7                    | 26316 | 1966-12-21 | NULL                                                     |\n|        84 | Stratham      | Jason           | Darwinstr. 4                 | 26316 | 1972-09-12 | NULL                                                     |\n|        85 | Damme         | Jean Claude van | Plauener Str. 25             | 66126 | 1960-10-18 | NULL                                                     |\n|        86 | Vaughn        | Vince           | Osterfelddamm 99             | 26316 | 1970-03-28 | NULL                                                     |\n|        87 | Hirschhausen  | Dr. Eckart von  | D\u00f6hrbruch 13                 | 39106 | 1967-08-25 | NULL                                                     |\n|        88 | Wagner        | Robert          | Im Gro\u00dfen B\u00fcchenfeld 8       | 28199 | 1930-02-10 | NULL                                                     |\n|        89 | Lippe         | J\u00fcrgen von der  | Heinrich-Meister-Allee 16    | 28199 | 1948-06-08 | NULL                                                     |\n|        90 | Walken        | Christopher     | Auerhahnhof 8                | 90427 | 1943-03-31 | NULL                                                     |\n|        91 | Wahlberg      | Mark            | Raabestr. 10                 | 01099 | 1971-06-05 | NULL                                                     |\n|        92 | Christoph     | Waltz           | H\u00e4gewiesen 18                | 14482 | 1956-10-04 | NULL                                                     |\n|        93 | Cage          | Nicolas         | Kokenstr. 1                  | 65183 | 1964-01-07 | Deutsche Presse-Agentur GmbH                             |\n|        94 | Busse         | Jochen          | Osteroder Weg 4              | 21129 | 1941-01-28 | DEUS GmbH &amp; Co.KG Spedition M\u00f6beltransport International |\n|        95 | Carrey        | Jim             | Sch\u00e4ferweg 8                 | 70599 | 1962-01-17 | C. W. Filmer                                             |\n|        96 | Cruz          | Pen\u00e9lope        | Moorhoffstr. 35              | 39106 | 1974-04-28 | C. F. Electronics                                        |\n|        97 | Cyrus         | Miley           | Im Kleinen Bruche 52         | 86159 | 1992-11-23 | B\u00fcsing &amp; Fasch GmbH &amp; Co.KG                              |\n|        98 | Garner        | Jennifer        | Kugelfangtrift 146           | 99090 | 1972-04-17 | BUG GmbH &amp; Co. KG                                        |\n|        99 | Furtw\u00e4ngler   | Maria           | Ferdinand-Wallbrecht-Str. 78 | 14482 | 1966-09-13 | BTC Business Technology Consulting AG                    |\n|       100 | Hunt          | Helen           | In der Steinriede 7          | 66126 | 1963-06-15 | Buchhandlung Libretto                                    |\n|       101 | Johansson     | Scarlett Marie  | Helwingerodestr. 5           | 24105 | 1984-11-22 | Bruns Berufskleidung GmbH                                |\n+-----------+---------------+-----------------+------------------------------+-------+------------+----------------------------------------------------------+\n</code></pre> Beispiell\u00f6sung zu 2. <pre><code>-- Befehl\nSELECT *\nFROM tbl_bundesland;\n\n-- Ausgabe\n+--------------+------------------------+\n| bundeslandPK | bundeslandname         |\n+--------------+------------------------+\n| BB           | Brandenburg            |\n| BE           | Berlin                 |\n| BW           | Baden-W\u00fcrttemberg      |\n| BY           | Bayern                 |\n| HB           | Bremen                 |\n| HE           | Hessen                 |\n| HH           | Hamburg                |\n| MV           | Mecklemburg-Vorpommern |\n| NI           | Niedersachsen          |\n| NW           | Nordrhein-Westfalen    |\n| RP           | Rheinland-Pfalz        |\n| SH           | Schleswig-Holstein     |\n| SL           | Saarland               |\n| SN           | Sachsen                |\n| ST           | Sachsen-Anhalt         |\n| TH           | Th\u00fcringen              |\n+--------------+------------------------+\n</code></pre> Beispiell\u00f6sung zu 3. <pre><code>-- Befehl\nSELECT plzPK, ort\nFROM tbl_plz;\n\n-- Ausgabe\n+-------+-------------------+\n| plzPK | ort               |\n+-------+-------------------+\n| 01099 | Dresden           |\n| 04319 | Leipzig           |\n| 07554 | Gera              |\n| 12524 | Berlin            |\n| 14482 | Potsdam           |\n| 18059 | Rostock           |\n| 19053 | Schwerin          |\n| 21129 | Hamburg           |\n| 23568 | L\u00fcbeck            |\n| 23970 | Wismar            |\n| 24105 | Kiel              |\n| 26121 | Oldenburg         |\n| 26316 | Varel             |\n| 28199 | Bremen            |\n| 30559 | Hannover          |\n| 39106 | Magdeburg         |\n| 40213 | D\u00fcsseldorf        |\n| 50968 | K\u00f6ln              |\n| 55128 | Mainz             |\n| 60329 | Frankfurt am Main |\n| 65183 | Wiesbaden         |\n| 66126 | Saarbr\u00fccken       |\n| 70599 | Stuttgart         |\n| 80331 | M\u00fcnchen           |\n| 86159 | Augsburg          |\n| 89075 | Ulm               |\n| 90427 | N\u00fcrnberg          |\n| 99090 | Erfurt            |\n+-------+-------------------+\n</code></pre> Beispiell\u00f6sung zu 4. <pre><code>-- Befehl\nSELECT *\nFROM tbl_verkaeufer\nWHERE nachname = 'Becker';\n\n-- Ausgabe\n+--------------+-----------+----------+-----------------------+-------+------------+--------------------+\n| verkaeuferPK | vorname   | nachname | anschrift             | plzFK | geburtstag | firma              |\n+--------------+-----------+----------+-----------------------+-------+------------+--------------------+\n|           38 | Charlotte | Becker   | Eggenfeldener Str. 64 | 26121 | 1983-05-19 | Waas-Online.de     |\n|           39 | Maritta   | Becker   | Mechthildenstr. 42    | 12524 | 1981-03-11 | PC Service Distler |\n+--------------+-----------+----------+-----------------------+-------+------------+--------------------+\n</code></pre>"},{"location":"kapitel_06.html#informationsmaterial-m60-select","title":"Informationsmaterial M|6.0: SELECT","text":""},{"location":"kapitel_06.html#grundlagen-zu-einfachen-datenabfragen-mit-select","title":"Grundlagen zu einfachen Datenabfragen (mit SELECT)","text":"<p>F\u00fcr gezielte Abfragen der gespeicherten Daten in einer Datenbank wird in SQL die <code>SELECT</code>-Anweisung verwendet. Sie ist die komplexeste SQL-Anweisung, besitzt viele optionale Erweiterungen und wird in der Praxis am h\u00e4ufigsten genutzt.</p> <p>Die <code>SELECT</code>-Anweisung \u00e4hnelt einer Frage bzw. Aufforderung an das Datenbanksystem, die gew\u00fcnschten Daten zu liefern.</p>"},{"location":"kapitel_06.html#beispiel-datenbank-zur-fuball-bundesliga","title":"Beispiel - Datenbank zur Fu\u00dfball-Bundesliga","text":"<p>In der Datenbank db_bundesliga sind die Tabellen tbl_spieler, tbl_verein und tbl_position angelegt. Der Aufbau sieht im ERM wie folgt aus:</p> <p></p> <p>Die Tabelle tbl_spieler enth\u00e4lt dabei folgende Daten:</p> <pre><code>+-----------+--------------+-----------+----------+------------+-----------+------------+\n| spielerPK | nachname     | vorname   | vereinFK | positionFK | rueckennr | geburtstag |\n+-----------+--------------+-----------+----------+------------+-----------+------------+\n|         1 | Weidenfeller | Roman     |        1 |          1 |         1 | 1980-08-06 |\n|         2 | Martinez     | Javier    |        2 |          2 |         8 | 1988-09-02 |\n|         3 | Fritz        | Clemens   |        3 |          2 |         8 | 1980-12-07 |\n|         4 | Meyer        | Max       |        4 |          3 |        10 | 1995-09-18 |\n|         5 | Sulejmani    | Valmir    |        5 |          4 |        38 | 1996-02-01 |\n|         6 | Schulz       | Christian |        5 |          2 |        19 | 1983-04-01 |\n|         7 | Reus         | Marco     |        1 |          3 |        11 | 1989-05-31 |\n|         8 | Schmelzer    | Marcel    |        1 |          2 |        29 | 1988-01-22 |\n+-----------+--------------+-----------+----------+------------+-----------+------------+\n</code></pre>"},{"location":"kapitel_06.html#aufbau-der-sql-abfrage","title":"Aufbau der SQL-Abfrage","text":"<p>Jede SQL-Abfrage hat drei Hauptbefehle:</p> <pre><code>SELECT  (engl. ausw\u00e4hlen)\nFROM    (engl. von)\nWHERE   (engl. wo)\n</code></pre> <p>Mit <code>FROM</code> wird die Tabelle ausgew\u00e4hlt, aus der die gew\u00fcnschten Informationen stammen. Mit <code>SELECT</code> wird angegeben, welche Attribute (Spalten) hieraus in der Ergebnistabelle ausgegeben werden sollen. Zuletzt wird die optionale <code>WHERE</code>-Bedingung angegeben. Hierin k\u00f6nnen bestimmte Datens\u00e4tze (Zeilen) ausgew\u00e4hlt werden. <code>WHERE</code> kann aus einer <code>SELECT</code>-Anweisung weggelassen werden, wenn alle Datens\u00e4tze ausgegeben werden sollen.</p>"},{"location":"kapitel_06.html#fortsetzung-des-beispiels-datenbank-zur-fuball-bundesliga","title":"Fortsetzung des Beispiels - Datenbank zur Fu\u00dfball-Bundesliga","text":"<p>Wir wollen wissen, welche Spieler die R\u00fcckennummer 8 haben. Also hie\u00dfe die SQL-Abfrage:</p> <p><pre><code>SELECT nachname, vorname, ruckennr  Welche Attribute (Spalten)?\nFROM tbl_spieler    Aus welcher Tabelle?\nWHERE rueckennr = 8;    Welche Datens\u00e4tze (Zeilen)?\n</code></pre> Ergebnis der SQL-Abfrage:</p> <pre><code>+----------+---------+-----------+\n| nachname | vorname | rueckennr |\n+----------+---------+-----------+\n| Martinez | Javier  |         8 |\n| Fritz    | Clemens |         8 |\n+----------+---------+-----------+\n</code></pre>"},{"location":"kapitel_06.html#hinweise-und-weitere-informationen","title":"Hinweise und weitere Informationen","text":"<ul> <li>Wenn man alle Spalten einer Tabelle angezeigt haben m\u00f6chte, kann man auch einfach ein <code>*</code> im <code>SELECT</code>-Teil einsetzen.</li> <li>Zeichenketten (Strings) wie zum Beispiel <code>'Schulz'</code> oder ein Datum <code>'1989-05-31'</code> setzt man in einfache Anf\u00fchrungszeichen.</li> <li>Es k\u00f6nnen Bedingungen so formuliert werden, dass keine Datens\u00e4tze zur\u00fcckgeliefert werden. Dann ist das Ergebnis eine leere Menge. So w\u00fcrde die im Beispiel genannte Suche mit der <code>WHERE</code>-Bedingung <code>vorname = 'Walter'</code> eine leere Tabelle ausgeben.</li> <li>Bei den Tabellennamen muss die Gro\u00df-/Kleinschreibung beachtet werden.</li> <li>Zur besseren \u00dcbersicht sollten die MySQL-Befehle immer in <code>GROSSBUCHSTABEN</code> geschrieben werden.</li> <li>Die Ergebnismenge kann z.B. mit <code>LIMIT 10</code> auf 10 Zeilen begrenzt werden.</li> </ul> <p>Zus\u00e4tzliches Material, weitere \u00dcbungen &amp; Tipps</p> <p>Die folgenden \u00dcbungen und Tipps &amp; Tricks dienen Ihrer pers\u00f6nlichen Wiederholung und Vorbereitung auf Klassenarbeiten, Pr\u00fcfungen etc.Ich kann, weil ich will, was ich muss! (Immanuel Kant)</p>"},{"location":"kapitel_06.html#ubungen","title":"\u00dcbungen","text":""},{"location":"kapitel_06.html#ubung-ue60-vorbereitungen-fur-die-ubungen-dieses-kapitels","title":"\u00dcbung UE|6.0: Vorbereitungen f\u00fcr die \u00dcbungen dieses Kapitels","text":"<p>Importieren Sie die db_universitaet neu aus der SQL-Datei (s.u.):</p> <pre><code>DROP DATABASE IF EXISTS db_universitaet;\nCREATE DATABASE IF NOT EXISTS db_universitaet;\nUSE db_universitaet;\n\nCREATE TABLE tbl_student (\nstudentPK INT NOT NULL AUTO_INCREMENT,\nvorname VARCHAR(40),\nnachname VARCHAR(40),\nPRIMARY KEY (studentPK)\n);\n\nCREATE TABLE tbl_buch (\nbuchPK INT NOT NULL AUTO_INCREMENT,\ntitel VARCHAR(90),\nPRIMARY KEY (buchPK)\n);\n\nCREATE TABLE tbl_professor (\nprofessorPK INT NOT NULL AUTO_INCREMENT,\nvorname VARCHAR(40),\nnachname VARCHAR(40),\nPRIMARY KEY (professorPK)\n);\n\nCREATE TABLE tbl_vorlesung (\nvorlesungPK INT NOT NULL AUTO_INCREMENT,\nprofessorFK INT,\ntitel VARCHAR(90),\nstundenanzahl INT,\nPRIMARY KEY (vorlesungPK),\nFOREIGN KEY (professorFK) REFERENCES tbl_professor (professorPK)\n);\n\nCREATE TABLE tbl_besucht (\nbesuchtPK INT NOT NULL AUTO_INCREMENT,\nstudentFK INT,\nvorlesungFK INT,\nPRIMARY KEY (besuchtPK),\nFOREIGN KEY (studentFK) REFERENCES tbl_student (studentPK),\nFOREIGN KEY (vorlesungFK) REFERENCES tbl_vorlesung (vorlesungPK)\n);\n\nCREATE TABLE tbl_benoetigt (\nbenoetigtPK INT NOT NULL AUTO_INCREMENT,\nvorlesungFK INT,\nbuchFK INT,\nPRIMARY KEY (benoetigtPK),\nFOREIGN KEY (vorlesungFK) REFERENCES tbl_vorlesung (vorlesungPK),\nFOREIGN KEY (buchFK) REFERENCES tbl_buch (buchPK)\n);\n\nINSERT INTO tbl_student (vorname, nachname) VALUES\n(\"Rainer\", \"Zufall\"),\n(\"Robin\", \"Hutt\");\n\nINSERT INTO tbl_buch (titel) VALUES\n(\"Quantenphysik f\u00fcr Dummies\"),\n(\"Kritik der reinen Vernunft\");\n\nINSERT INTO tbl_professor (vorname, nachname) VALUES\n(\"Andy\", \"Arbeit\"),\n(\"Theo\", \"Rist\");\n\nINSERT INTO tbl_vorlesung (professorFK, titel, stundenanzahl) VALUES\n(1, \"Einf\u00fchrung in die Quantenphysik\", 4),\n(2, \"Philosophie des Immanuel Kant\", 2);\n\nINSERT INTO tbl_benoetigt (vorlesungFK, buchFK) VALUES\n(1, 1),\n(2, 2);\n\nINSERT INTO tbl_besucht (studentFK, vorlesungFK) VALUES\n(1, 1),\n(2, 1);\n</code></pre>"},{"location":"kapitel_06.html#ubung-ue61-abfragen-zur-db_universitaet","title":"\u00dcbung UE|6.1: Abfragen zur db_universitaet","text":"<p>Welche Abfragen sind notwendig?</p> <ol> <li>Lassen Sie sich alle Professoren mit allen Attributen anzeigen.</li> <li>Es wird f\u00fcr einen Serienbrief eine Liste der Vor- und Nachnamen aller Studenten ben\u00f6tigt.</li> <li>Welche Vorlesungen werden angeboten?</li> <li>Ein Student m\u00f6chte Wissen, welche Buchtitel er f\u00fcr das Studium bestellen muss. Lassen Sie sich eine Liste aller Buchtitel ausgeben.</li> <li>Zur Kontrolle der Datenbank soll die Tabelle tbl_benoetigt analysiert werden. Lassen Sie sich alle Attribute anzeigen. Beschreiben Sie die Funktion und Bedeutung der tbl_benoetigt im Rahmen der db_universitaet.</li> </ol> <p>Lizenz</p> <p>Der PV-DB-Kurs von  Oliver Schwenke &amp; Andr\u00e9 Neumann ist lizenziert unter einer Creative Commons Namensnennung - Nicht-kommerziell - Weitergabe unter gleichen Bedingungen 4.0 International Lizenz. Fragen, Hinweise etc. an neumann@mmbbs.de.</p>"},{"location":"inhalte/lizenzhinweis.html","title":"Lizenzhinweis","text":"<p>Lizenz</p> <p>Der PV-DB-Kurs von  Oliver Schwenke &amp; Andr\u00e9 Neumann ist lizenziert unter einer Creative Commons Namensnennung - Nicht-kommerziell - Weitergabe unter gleichen Bedingungen 4.0 International Lizenz. Fragen, Hinweise etc. an neumann@mmbbs.de.</p>"}]}